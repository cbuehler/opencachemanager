// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class AddComboFilter {
        
        private Gtk.HBox hbox2;
        
        private Gtk.Image image9;
        
        private Gtk.Label label1;
        
        private Gtk.HBox hbox1;
        
        private Gtk.ScrolledWindow scrolledwindow1;
        
        private Gtk.TreeView conditionList;
        
        private Gtk.VButtonBox vbuttonbox1;
        
        private Gtk.Button AddConditionButton;
        
        private Gtk.Button addQuickFilterButton;
        
        private Gtk.Button editbutton;
        
        private Gtk.Button deleteButton;
        
        private Gtk.Button buttonCancel;
        
        private Gtk.Button buttonOk;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.AddComboFilter
            this.WidthRequest = 650;
            this.HeightRequest = 450;
            this.Name = "ocmgtk.AddComboFilter";
            this.Title = Mono.Unix.Catalog.GetString("Create Combination Filter...");
            this.TypeHint = ((Gdk.WindowTypeHint)(1));
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.Modal = true;
            this.BorderWidth = ((uint)(6));
            this.Resizable = false;
            this.AllowGrow = false;
            this.SkipPagerHint = true;
            this.SkipTaskbarHint = true;
            // Internal child ocmgtk.AddComboFilter.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.Spacing = 6;
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.image9 = new Gtk.Image();
            this.image9.Name = "image9";
            this.image9.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-dialog-info", Gtk.IconSize.Dnd, 32);
            this.hbox2.Add(this.image9);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.hbox2[this.image9]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.label1 = new Gtk.Label();
            this.label1.Name = "label1";
            this.label1.LabelProp = Mono.Unix.Catalog.GetString("Click <b>Add</b> to add a new filter condition, caches that meet any of the conditions\nwill be returned.");
            this.label1.UseMarkup = true;
            this.hbox2.Add(this.label1);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.hbox2[this.label1]));
            w3.Position = 1;
            w3.Expand = false;
            w3.Fill = false;
            w1.Add(this.hbox2);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(w1[this.hbox2]));
            w4.Position = 0;
            w4.Expand = false;
            w4.Fill = false;
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Spacing = 6;
            // Container child hbox1.Gtk.Box+BoxChild
            this.scrolledwindow1 = new Gtk.ScrolledWindow();
            this.scrolledwindow1.CanFocus = true;
            this.scrolledwindow1.Name = "scrolledwindow1";
            this.scrolledwindow1.ShadowType = ((Gtk.ShadowType)(1));
            // Container child scrolledwindow1.Gtk.Container+ContainerChild
            this.conditionList = new Gtk.TreeView();
            this.conditionList.CanFocus = true;
            this.conditionList.Name = "conditionList";
            this.conditionList.HeadersVisible = false;
            this.scrolledwindow1.Add(this.conditionList);
            this.hbox1.Add(this.scrolledwindow1);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.hbox1[this.scrolledwindow1]));
            w6.Position = 0;
            // Container child hbox1.Gtk.Box+BoxChild
            this.vbuttonbox1 = new Gtk.VButtonBox();
            this.vbuttonbox1.Name = "vbuttonbox1";
            this.vbuttonbox1.Spacing = 6;
            this.vbuttonbox1.LayoutStyle = ((Gtk.ButtonBoxStyle)(3));
            // Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
            this.AddConditionButton = new Gtk.Button();
            this.AddConditionButton.CanFocus = true;
            this.AddConditionButton.Name = "AddConditionButton";
            this.AddConditionButton.UseStock = true;
            this.AddConditionButton.UseUnderline = true;
            this.AddConditionButton.Label = "gtk-add";
            this.vbuttonbox1.Add(this.AddConditionButton);
            Gtk.ButtonBox.ButtonBoxChild w7 = ((Gtk.ButtonBox.ButtonBoxChild)(this.vbuttonbox1[this.AddConditionButton]));
            w7.Expand = false;
            w7.Fill = false;
            w7.Padding = ((uint)(6));
            // Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
            this.addQuickFilterButton = new Gtk.Button();
            this.addQuickFilterButton.CanFocus = true;
            this.addQuickFilterButton.Name = "addQuickFilterButton";
            this.addQuickFilterButton.UseUnderline = true;
            this.addQuickFilterButton.Label = Mono.Unix.Catalog.GetString("Import _Quick Filter");
            this.vbuttonbox1.Add(this.addQuickFilterButton);
            Gtk.ButtonBox.ButtonBoxChild w8 = ((Gtk.ButtonBox.ButtonBoxChild)(this.vbuttonbox1[this.addQuickFilterButton]));
            w8.Position = 1;
            w8.Expand = false;
            w8.Fill = false;
            // Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
            this.editbutton = new Gtk.Button();
            this.editbutton.Sensitive = false;
            this.editbutton.CanFocus = true;
            this.editbutton.Name = "editbutton";
            this.editbutton.UseStock = true;
            this.editbutton.UseUnderline = true;
            this.editbutton.Label = "gtk-edit";
            this.vbuttonbox1.Add(this.editbutton);
            Gtk.ButtonBox.ButtonBoxChild w9 = ((Gtk.ButtonBox.ButtonBoxChild)(this.vbuttonbox1[this.editbutton]));
            w9.Position = 2;
            w9.Expand = false;
            w9.Fill = false;
            // Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
            this.deleteButton = new Gtk.Button();
            this.deleteButton.Sensitive = false;
            this.deleteButton.CanFocus = true;
            this.deleteButton.Name = "deleteButton";
            this.deleteButton.UseStock = true;
            this.deleteButton.UseUnderline = true;
            this.deleteButton.Label = "gtk-remove";
            this.vbuttonbox1.Add(this.deleteButton);
            Gtk.ButtonBox.ButtonBoxChild w10 = ((Gtk.ButtonBox.ButtonBoxChild)(this.vbuttonbox1[this.deleteButton]));
            w10.Position = 3;
            w10.Expand = false;
            w10.Fill = false;
            this.hbox1.Add(this.vbuttonbox1);
            Gtk.Box.BoxChild w11 = ((Gtk.Box.BoxChild)(this.hbox1[this.vbuttonbox1]));
            w11.Position = 1;
            w11.Expand = false;
            w11.Fill = false;
            w1.Add(this.hbox1);
            Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(w1[this.hbox1]));
            w12.Position = 1;
            // Internal child ocmgtk.AddComboFilter.ActionArea
            Gtk.HButtonBox w13 = this.ActionArea;
            w13.Name = "dialog1_ActionArea";
            w13.Spacing = 10;
            w13.BorderWidth = ((uint)(5));
            w13.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonCancel = new Gtk.Button();
            this.buttonCancel.CanDefault = true;
            this.buttonCancel.CanFocus = true;
            this.buttonCancel.Name = "buttonCancel";
            this.buttonCancel.UseStock = true;
            this.buttonCancel.UseUnderline = true;
            this.buttonCancel.Label = "gtk-cancel";
            this.AddActionWidget(this.buttonCancel, -6);
            Gtk.ButtonBox.ButtonBoxChild w14 = ((Gtk.ButtonBox.ButtonBoxChild)(w13[this.buttonCancel]));
            w14.Expand = false;
            w14.Fill = false;
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonOk = new Gtk.Button();
            this.buttonOk.CanDefault = true;
            this.buttonOk.CanFocus = true;
            this.buttonOk.Name = "buttonOk";
            this.buttonOk.UseStock = true;
            this.buttonOk.UseUnderline = true;
            this.buttonOk.Label = "gtk-ok";
            this.AddActionWidget(this.buttonOk, -5);
            Gtk.ButtonBox.ButtonBoxChild w15 = ((Gtk.ButtonBox.ButtonBoxChild)(w13[this.buttonOk]));
            w15.Position = 1;
            w15.Expand = false;
            w15.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 662;
            this.DefaultHeight = 480;
            this.buttonOk.HasDefault = true;
            this.Show();
            this.AddConditionButton.Clicked += new System.EventHandler(this.OnAddClick);
            this.addQuickFilterButton.Clicked += new System.EventHandler(this.OnImportQuickFilter);
            this.editbutton.Clicked += new System.EventHandler(this.OnEditClicked);
            this.deleteButton.Clicked += new System.EventHandler(this.OnRemoveClick);
            this.buttonCancel.Clicked += new System.EventHandler(this.OnCancelClicked);
            this.buttonOk.Clicked += new System.EventHandler(this.OnOkClicked);
        }
    }
}
