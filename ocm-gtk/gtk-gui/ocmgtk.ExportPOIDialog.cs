// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class ExportPOIDialog {
        
        private Gtk.VBox vbox2;
        
        private Gtk.HBox hbox1;
        
        private Gtk.Label label1;
        
        private Gtk.Entry fileEntry;
        
        private Gtk.Button fileButton;
        
        private Gtk.Image image3;
        
        private Gtk.Frame frame1;
        
        private Gtk.Alignment GtkAlignment2;
        
        private Gtk.Table table1;
        
        private Gtk.Entry catagoryEntry;
        
        private Gtk.ComboBox descCombo;
        
        private Gtk.HBox hbox2;
        
        private Gtk.CheckButton includeBMPCheck;
        
        private Gtk.Entry bmpFile;
        
        private Gtk.Button bmpButton;
        
        private Gtk.Image image4;
        
        private Gtk.HBox hbox3;
        
        private Gtk.Entry proxEntry;
        
        private Gtk.ComboBox proxCombo;
        
        private Gtk.CheckButton includeChildrenCheck;
        
        private Gtk.Label label2;
        
        private Gtk.Label label3;
        
        private Gtk.Label label4;
        
        private Gtk.CheckButton limitCaches;
        
        private Gtk.Entry limitEntry;
        
        private Gtk.CheckButton logCheck;
        
        private Gtk.Entry logEntry;
        
        private Gtk.ComboBox nameCombo;
        
        private Gtk.CheckButton proximityAlertCheck;
        
        private Gtk.CheckButton useHTMLCheck;
        
        private Gtk.Label GtkLabel4;
        
        private Gtk.Button buttonCancel;
        
        private Gtk.Button buttonOk;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.ExportPOIDialog
            this.WidthRequest = 600;
            this.Name = "ocmgtk.ExportPOIDialog";
            this.Title = Mono.Unix.Catalog.GetString("Export Garmin POI");
            this.TypeHint = ((Gdk.WindowTypeHint)(1));
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.Modal = true;
            this.BorderWidth = ((uint)(6));
            this.Resizable = false;
            this.AllowGrow = false;
            this.SkipPagerHint = true;
            this.SkipTaskbarHint = true;
            // Internal child ocmgtk.ExportPOIDialog.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.vbox2 = new Gtk.VBox();
            this.vbox2.Name = "vbox2";
            this.vbox2.Spacing = 6;
            // Container child vbox2.Gtk.Box+BoxChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Spacing = 6;
            // Container child hbox1.Gtk.Box+BoxChild
            this.label1 = new Gtk.Label();
            this.label1.Name = "label1";
            this.label1.LabelProp = Mono.Unix.Catalog.GetString("File:");
            this.hbox1.Add(this.label1);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.hbox1[this.label1]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.fileEntry = new Gtk.Entry();
            this.fileEntry.CanFocus = true;
            this.fileEntry.Name = "fileEntry";
            this.fileEntry.IsEditable = true;
            this.fileEntry.InvisibleChar = '●';
            this.hbox1.Add(this.fileEntry);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.hbox1[this.fileEntry]));
            w3.Position = 1;
            // Container child hbox1.Gtk.Box+BoxChild
            this.fileButton = new Gtk.Button();
            this.fileButton.CanFocus = true;
            this.fileButton.Name = "fileButton";
            // Container child fileButton.Gtk.Container+ContainerChild
            this.image3 = new Gtk.Image();
            this.image3.Name = "image3";
            this.image3.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-open", Gtk.IconSize.Menu, 16);
            this.fileButton.Add(this.image3);
            this.fileButton.Label = null;
            this.hbox1.Add(this.fileButton);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.hbox1[this.fileButton]));
            w5.Position = 2;
            w5.Expand = false;
            w5.Fill = false;
            this.vbox2.Add(this.hbox1);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.vbox2[this.hbox1]));
            w6.Position = 0;
            w6.Expand = false;
            w6.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.frame1 = new Gtk.Frame();
            this.frame1.Name = "frame1";
            this.frame1.ShadowType = ((Gtk.ShadowType)(0));
            // Container child frame1.Gtk.Container+ContainerChild
            this.GtkAlignment2 = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment2.Name = "GtkAlignment2";
            this.GtkAlignment2.LeftPadding = ((uint)(12));
            // Container child GtkAlignment2.Gtk.Container+ContainerChild
            this.table1 = new Gtk.Table(((uint)(9)), ((uint)(2)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.catagoryEntry = new Gtk.Entry();
            this.catagoryEntry.CanFocus = true;
            this.catagoryEntry.Name = "catagoryEntry";
            this.catagoryEntry.Text = Mono.Unix.Catalog.GetString("Geocaches");
            this.catagoryEntry.IsEditable = true;
            this.catagoryEntry.InvisibleChar = '●';
            this.table1.Add(this.catagoryEntry);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table1[this.catagoryEntry]));
            w7.TopAttach = ((uint)(2));
            w7.BottomAttach = ((uint)(3));
            w7.LeftAttach = ((uint)(1));
            w7.RightAttach = ((uint)(2));
            w7.XOptions = ((Gtk.AttachOptions)(4));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.descCombo = Gtk.ComboBox.NewText();
            this.descCombo.AppendText(Mono.Unix.Catalog.GetString("Cache Name"));
            this.descCombo.AppendText(Mono.Unix.Catalog.GetString("Cache Code/Size/Hint"));
            this.descCombo.AppendText(Mono.Unix.Catalog.GetString("Cache Code/Size/Type"));
            this.descCombo.AppendText(Mono.Unix.Catalog.GetString("Full Paperless"));
            this.descCombo.Name = "descCombo";
            this.descCombo.Active = 0;
            this.table1.Add(this.descCombo);
            Gtk.Table.TableChild w8 = ((Gtk.Table.TableChild)(this.table1[this.descCombo]));
            w8.TopAttach = ((uint)(1));
            w8.BottomAttach = ((uint)(2));
            w8.LeftAttach = ((uint)(1));
            w8.RightAttach = ((uint)(2));
            w8.XOptions = ((Gtk.AttachOptions)(4));
            w8.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.includeBMPCheck = new Gtk.CheckButton();
            this.includeBMPCheck.CanFocus = true;
            this.includeBMPCheck.Name = "includeBMPCheck";
            this.includeBMPCheck.Label = Mono.Unix.Catalog.GetString("BMP Icon:");
            this.includeBMPCheck.DrawIndicator = true;
            this.includeBMPCheck.UseUnderline = true;
            this.hbox2.Add(this.includeBMPCheck);
            Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(this.hbox2[this.includeBMPCheck]));
            w9.Position = 0;
            w9.Expand = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.bmpFile = new Gtk.Entry();
            this.bmpFile.Sensitive = false;
            this.bmpFile.CanFocus = true;
            this.bmpFile.Name = "bmpFile";
            this.bmpFile.IsEditable = true;
            this.bmpFile.InvisibleChar = '●';
            this.hbox2.Add(this.bmpFile);
            Gtk.Box.BoxChild w10 = ((Gtk.Box.BoxChild)(this.hbox2[this.bmpFile]));
            w10.Position = 1;
            // Container child hbox2.Gtk.Box+BoxChild
            this.bmpButton = new Gtk.Button();
            this.bmpButton.Sensitive = false;
            this.bmpButton.CanFocus = true;
            this.bmpButton.Name = "bmpButton";
            // Container child bmpButton.Gtk.Container+ContainerChild
            this.image4 = new Gtk.Image();
            this.image4.Name = "image4";
            this.image4.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-open", Gtk.IconSize.Menu, 16);
            this.bmpButton.Add(this.image4);
            this.bmpButton.Label = null;
            this.hbox2.Add(this.bmpButton);
            Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(this.hbox2[this.bmpButton]));
            w12.Position = 2;
            w12.Expand = false;
            w12.Fill = false;
            this.table1.Add(this.hbox2);
            Gtk.Table.TableChild w13 = ((Gtk.Table.TableChild)(this.table1[this.hbox2]));
            w13.TopAttach = ((uint)(8));
            w13.BottomAttach = ((uint)(9));
            w13.RightAttach = ((uint)(2));
            w13.XOptions = ((Gtk.AttachOptions)(4));
            w13.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.hbox3 = new Gtk.HBox();
            this.hbox3.Name = "hbox3";
            this.hbox3.Spacing = 6;
            // Container child hbox3.Gtk.Box+BoxChild
            this.proxEntry = new Gtk.Entry();
            this.proxEntry.Sensitive = false;
            this.proxEntry.CanFocus = true;
            this.proxEntry.Name = "proxEntry";
            this.proxEntry.Text = Mono.Unix.Catalog.GetString("1");
            this.proxEntry.IsEditable = true;
            this.proxEntry.InvisibleChar = '●';
            this.hbox3.Add(this.proxEntry);
            Gtk.Box.BoxChild w14 = ((Gtk.Box.BoxChild)(this.hbox3[this.proxEntry]));
            w14.Position = 0;
            // Container child hbox3.Gtk.Box+BoxChild
            this.proxCombo = Gtk.ComboBox.NewText();
            this.proxCombo.AppendText(Mono.Unix.Catalog.GetString("kilometers"));
            this.proxCombo.AppendText(Mono.Unix.Catalog.GetString("miles"));
            this.proxCombo.Sensitive = false;
            this.proxCombo.Name = "proxCombo";
            this.proxCombo.Active = 0;
            this.hbox3.Add(this.proxCombo);
            Gtk.Box.BoxChild w15 = ((Gtk.Box.BoxChild)(this.hbox3[this.proxCombo]));
            w15.Position = 1;
            w15.Expand = false;
            w15.Fill = false;
            this.table1.Add(this.hbox3);
            Gtk.Table.TableChild w16 = ((Gtk.Table.TableChild)(this.table1[this.hbox3]));
            w16.TopAttach = ((uint)(3));
            w16.BottomAttach = ((uint)(4));
            w16.LeftAttach = ((uint)(1));
            w16.RightAttach = ((uint)(2));
            w16.XOptions = ((Gtk.AttachOptions)(4));
            w16.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.includeChildrenCheck = new Gtk.CheckButton();
            this.includeChildrenCheck.CanFocus = true;
            this.includeChildrenCheck.Name = "includeChildrenCheck";
            this.includeChildrenCheck.Label = Mono.Unix.Catalog.GetString("Include Child Waypoints");
            this.includeChildrenCheck.DrawIndicator = true;
            this.includeChildrenCheck.UseUnderline = true;
            this.table1.Add(this.includeChildrenCheck);
            Gtk.Table.TableChild w17 = ((Gtk.Table.TableChild)(this.table1[this.includeChildrenCheck]));
            w17.TopAttach = ((uint)(6));
            w17.BottomAttach = ((uint)(7));
            w17.RightAttach = ((uint)(2));
            w17.XOptions = ((Gtk.AttachOptions)(4));
            w17.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label2 = new Gtk.Label();
            this.label2.Name = "label2";
            this.label2.Xalign = 0F;
            this.label2.LabelProp = Mono.Unix.Catalog.GetString("Name:");
            this.table1.Add(this.label2);
            Gtk.Table.TableChild w18 = ((Gtk.Table.TableChild)(this.table1[this.label2]));
            w18.XOptions = ((Gtk.AttachOptions)(4));
            w18.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label3 = new Gtk.Label();
            this.label3.Name = "label3";
            this.label3.Xalign = 0F;
            this.label3.LabelProp = Mono.Unix.Catalog.GetString("Description:");
            this.table1.Add(this.label3);
            Gtk.Table.TableChild w19 = ((Gtk.Table.TableChild)(this.table1[this.label3]));
            w19.TopAttach = ((uint)(1));
            w19.BottomAttach = ((uint)(2));
            w19.XOptions = ((Gtk.AttachOptions)(4));
            w19.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label4 = new Gtk.Label();
            this.label4.Name = "label4";
            this.label4.Xalign = 0F;
            this.label4.LabelProp = Mono.Unix.Catalog.GetString("Category:");
            this.table1.Add(this.label4);
            Gtk.Table.TableChild w20 = ((Gtk.Table.TableChild)(this.table1[this.label4]));
            w20.TopAttach = ((uint)(2));
            w20.BottomAttach = ((uint)(3));
            w20.XOptions = ((Gtk.AttachOptions)(4));
            w20.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.limitCaches = new Gtk.CheckButton();
            this.limitCaches.CanFocus = true;
            this.limitCaches.Name = "limitCaches";
            this.limitCaches.Label = Mono.Unix.Catalog.GetString("Limit Number of Geocaches");
            this.limitCaches.DrawIndicator = true;
            this.limitCaches.UseUnderline = true;
            this.table1.Add(this.limitCaches);
            Gtk.Table.TableChild w21 = ((Gtk.Table.TableChild)(this.table1[this.limitCaches]));
            w21.TopAttach = ((uint)(4));
            w21.BottomAttach = ((uint)(5));
            w21.XOptions = ((Gtk.AttachOptions)(4));
            w21.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.limitEntry = new Gtk.Entry();
            this.limitEntry.Sensitive = false;
            this.limitEntry.CanFocus = true;
            this.limitEntry.Name = "limitEntry";
            this.limitEntry.Text = Mono.Unix.Catalog.GetString("1000");
            this.limitEntry.IsEditable = true;
            this.limitEntry.InvisibleChar = '●';
            this.table1.Add(this.limitEntry);
            Gtk.Table.TableChild w22 = ((Gtk.Table.TableChild)(this.table1[this.limitEntry]));
            w22.TopAttach = ((uint)(4));
            w22.BottomAttach = ((uint)(5));
            w22.LeftAttach = ((uint)(1));
            w22.RightAttach = ((uint)(2));
            w22.XOptions = ((Gtk.AttachOptions)(4));
            w22.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.logCheck = new Gtk.CheckButton();
            this.logCheck.CanFocus = true;
            this.logCheck.Name = "logCheck";
            this.logCheck.Label = Mono.Unix.Catalog.GetString("Limit Number of Logs");
            this.logCheck.DrawIndicator = true;
            this.logCheck.UseUnderline = true;
            this.table1.Add(this.logCheck);
            Gtk.Table.TableChild w23 = ((Gtk.Table.TableChild)(this.table1[this.logCheck]));
            w23.TopAttach = ((uint)(5));
            w23.BottomAttach = ((uint)(6));
            w23.XOptions = ((Gtk.AttachOptions)(4));
            w23.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.logEntry = new Gtk.Entry();
            this.logEntry.Sensitive = false;
            this.logEntry.CanFocus = true;
            this.logEntry.Name = "logEntry";
            this.logEntry.Text = Mono.Unix.Catalog.GetString("5");
            this.logEntry.IsEditable = true;
            this.logEntry.InvisibleChar = '●';
            this.table1.Add(this.logEntry);
            Gtk.Table.TableChild w24 = ((Gtk.Table.TableChild)(this.table1[this.logEntry]));
            w24.TopAttach = ((uint)(5));
            w24.BottomAttach = ((uint)(6));
            w24.LeftAttach = ((uint)(1));
            w24.RightAttach = ((uint)(2));
            w24.XOptions = ((Gtk.AttachOptions)(4));
            w24.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.nameCombo = Gtk.ComboBox.NewText();
            this.nameCombo.AppendText(Mono.Unix.Catalog.GetString("Cache Code"));
            this.nameCombo.AppendText(Mono.Unix.Catalog.GetString("Cache Name"));
            this.nameCombo.Name = "nameCombo";
            this.nameCombo.Active = 0;
            this.table1.Add(this.nameCombo);
            Gtk.Table.TableChild w25 = ((Gtk.Table.TableChild)(this.table1[this.nameCombo]));
            w25.LeftAttach = ((uint)(1));
            w25.RightAttach = ((uint)(2));
            w25.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.proximityAlertCheck = new Gtk.CheckButton();
            this.proximityAlertCheck.CanFocus = true;
            this.proximityAlertCheck.Name = "proximityAlertCheck";
            this.proximityAlertCheck.Label = Mono.Unix.Catalog.GetString("Proximity Alert:");
            this.proximityAlertCheck.DrawIndicator = true;
            this.proximityAlertCheck.UseUnderline = true;
            this.table1.Add(this.proximityAlertCheck);
            Gtk.Table.TableChild w26 = ((Gtk.Table.TableChild)(this.table1[this.proximityAlertCheck]));
            w26.TopAttach = ((uint)(3));
            w26.BottomAttach = ((uint)(4));
            w26.XOptions = ((Gtk.AttachOptions)(4));
            w26.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.useHTMLCheck = new Gtk.CheckButton();
            this.useHTMLCheck.CanFocus = true;
            this.useHTMLCheck.Name = "useHTMLCheck";
            this.useHTMLCheck.Label = Mono.Unix.Catalog.GetString("Convert HTML to Plain Text");
            this.useHTMLCheck.DrawIndicator = true;
            this.useHTMLCheck.UseUnderline = true;
            this.table1.Add(this.useHTMLCheck);
            Gtk.Table.TableChild w27 = ((Gtk.Table.TableChild)(this.table1[this.useHTMLCheck]));
            w27.TopAttach = ((uint)(7));
            w27.BottomAttach = ((uint)(8));
            w27.RightAttach = ((uint)(2));
            w27.XOptions = ((Gtk.AttachOptions)(4));
            w27.YOptions = ((Gtk.AttachOptions)(4));
            this.GtkAlignment2.Add(this.table1);
            this.frame1.Add(this.GtkAlignment2);
            this.GtkLabel4 = new Gtk.Label();
            this.GtkLabel4.Name = "GtkLabel4";
            this.GtkLabel4.LabelProp = Mono.Unix.Catalog.GetString("<b>POI Options</b>");
            this.GtkLabel4.UseMarkup = true;
            this.frame1.LabelWidget = this.GtkLabel4;
            this.vbox2.Add(this.frame1);
            Gtk.Box.BoxChild w30 = ((Gtk.Box.BoxChild)(this.vbox2[this.frame1]));
            w30.Position = 1;
            w30.Expand = false;
            w30.Fill = false;
            w1.Add(this.vbox2);
            Gtk.Box.BoxChild w31 = ((Gtk.Box.BoxChild)(w1[this.vbox2]));
            w31.Position = 0;
            w31.Expand = false;
            w31.Fill = false;
            // Internal child ocmgtk.ExportPOIDialog.ActionArea
            Gtk.HButtonBox w32 = this.ActionArea;
            w32.Name = "dialog1_ActionArea";
            w32.Spacing = 10;
            w32.BorderWidth = ((uint)(5));
            w32.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonCancel = new Gtk.Button();
            this.buttonCancel.CanDefault = true;
            this.buttonCancel.CanFocus = true;
            this.buttonCancel.Name = "buttonCancel";
            this.buttonCancel.UseStock = true;
            this.buttonCancel.UseUnderline = true;
            this.buttonCancel.Label = "gtk-cancel";
            this.AddActionWidget(this.buttonCancel, -6);
            Gtk.ButtonBox.ButtonBoxChild w33 = ((Gtk.ButtonBox.ButtonBoxChild)(w32[this.buttonCancel]));
            w33.Expand = false;
            w33.Fill = false;
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonOk = new Gtk.Button();
            this.buttonOk.CanDefault = true;
            this.buttonOk.CanFocus = true;
            this.buttonOk.Name = "buttonOk";
            this.buttonOk.UseStock = true;
            this.buttonOk.UseUnderline = true;
            this.buttonOk.Label = "gtk-ok";
            this.AddActionWidget(this.buttonOk, -5);
            Gtk.ButtonBox.ButtonBoxChild w34 = ((Gtk.ButtonBox.ButtonBoxChild)(w32[this.buttonOk]));
            w34.Position = 1;
            w34.Expand = false;
            w34.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 612;
            this.DefaultHeight = 415;
            this.Show();
            this.fileButton.Clicked += new System.EventHandler(this.OnFileClick);
            this.proximityAlertCheck.Toggled += new System.EventHandler(this.OnProxToggle);
            this.logCheck.Toggled += new System.EventHandler(this.OnLogToggle);
            this.limitCaches.Toggled += new System.EventHandler(this.OnCacheToggle);
            this.includeBMPCheck.Toggled += new System.EventHandler(this.OnBMPToggle);
            this.bmpButton.Clicked += new System.EventHandler(this.OnBMPClick);
            this.buttonCancel.Clicked += new System.EventHandler(this.OnCancelClick);
            this.buttonOk.Clicked += new System.EventHandler(this.OnOKClick);
        }
    }
}
