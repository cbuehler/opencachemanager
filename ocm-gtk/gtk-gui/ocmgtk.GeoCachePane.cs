// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class GeoCachePane {
        
        private Gtk.Alignment alignment1;
        
        private Gtk.Notebook notebook2;
        
        private ocmgtk.GeocacheInfoPanel cacheInfo;
        
        private Gtk.Label label12;
        
        private ocmgtk.DescriptionWidget descWidget;
        
        private Gtk.Label label13;
        
        private ocmgtk.LogViewerWidget logView;
        
        private Gtk.Label label14;
        
        private ocmgtk.WaypointWidget waypointView;
        
        private Gtk.Label label15;
        
        private ocmgtk.NotesWidget notesWidget;
        
        private Gtk.Label label16;
        
        private ocmgtk.ImagesWidget cacheImages;
        
        private Gtk.Label label17;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.GeoCachePane
            Stetic.BinContainer.Attach(this);
            this.Name = "ocmgtk.GeoCachePane";
            // Container child ocmgtk.GeoCachePane.Gtk.Container+ContainerChild
            this.alignment1 = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.alignment1.Name = "alignment1";
            // Container child alignment1.Gtk.Container+ContainerChild
            this.notebook2 = new Gtk.Notebook();
            this.notebook2.CanFocus = true;
            this.notebook2.Name = "notebook2";
            this.notebook2.CurrentPage = 5;
            // Container child notebook2.Gtk.Notebook+NotebookChild
            this.cacheInfo = new ocmgtk.GeocacheInfoPanel();
            this.cacheInfo.Events = ((Gdk.EventMask)(256));
            this.cacheInfo.Name = "cacheInfo";
            this.notebook2.Add(this.cacheInfo);
            // Notebook tab
            this.label12 = new Gtk.Label();
            this.label12.Name = "label12";
            this.label12.LabelProp = Mono.Unix.Catalog.GetString("Quick Info");
            this.notebook2.SetTabLabel(this.cacheInfo, this.label12);
            this.label12.ShowAll();
            // Container child notebook2.Gtk.Notebook+NotebookChild
            this.descWidget = new ocmgtk.DescriptionWidget();
            this.descWidget.Events = ((Gdk.EventMask)(256));
            this.descWidget.Name = "descWidget";
            this.notebook2.Add(this.descWidget);
            Gtk.Notebook.NotebookChild w2 = ((Gtk.Notebook.NotebookChild)(this.notebook2[this.descWidget]));
            w2.Position = 1;
            // Notebook tab
            this.label13 = new Gtk.Label();
            this.label13.Name = "label13";
            this.label13.LabelProp = Mono.Unix.Catalog.GetString("Description");
            this.notebook2.SetTabLabel(this.descWidget, this.label13);
            this.label13.ShowAll();
            // Container child notebook2.Gtk.Notebook+NotebookChild
            this.logView = new ocmgtk.LogViewerWidget();
            this.logView.Events = ((Gdk.EventMask)(256));
            this.logView.Name = "logView";
            this.notebook2.Add(this.logView);
            Gtk.Notebook.NotebookChild w3 = ((Gtk.Notebook.NotebookChild)(this.notebook2[this.logView]));
            w3.Position = 2;
            // Notebook tab
            this.label14 = new Gtk.Label();
            this.label14.Name = "label14";
            this.label14.LabelProp = Mono.Unix.Catalog.GetString("Logs");
            this.notebook2.SetTabLabel(this.logView, this.label14);
            this.label14.ShowAll();
            // Container child notebook2.Gtk.Notebook+NotebookChild
            this.waypointView = new ocmgtk.WaypointWidget();
            this.waypointView.Events = ((Gdk.EventMask)(256));
            this.waypointView.Name = "waypointView";
            this.notebook2.Add(this.waypointView);
            Gtk.Notebook.NotebookChild w4 = ((Gtk.Notebook.NotebookChild)(this.notebook2[this.waypointView]));
            w4.Position = 3;
            // Notebook tab
            this.label15 = new Gtk.Label();
            this.label15.Name = "label15";
            this.label15.LabelProp = Mono.Unix.Catalog.GetString("Waypoints");
            this.notebook2.SetTabLabel(this.waypointView, this.label15);
            this.label15.ShowAll();
            // Container child notebook2.Gtk.Notebook+NotebookChild
            this.notesWidget = new ocmgtk.NotesWidget();
            this.notesWidget.Events = ((Gdk.EventMask)(256));
            this.notesWidget.Name = "notesWidget";
            this.notebook2.Add(this.notesWidget);
            Gtk.Notebook.NotebookChild w5 = ((Gtk.Notebook.NotebookChild)(this.notebook2[this.notesWidget]));
            w5.Position = 4;
            // Notebook tab
            this.label16 = new Gtk.Label();
            this.label16.Name = "label16";
            this.label16.LabelProp = Mono.Unix.Catalog.GetString("Notes");
            this.notebook2.SetTabLabel(this.notesWidget, this.label16);
            this.label16.ShowAll();
            // Container child notebook2.Gtk.Notebook+NotebookChild
            this.cacheImages = new ocmgtk.ImagesWidget();
            this.cacheImages.Events = ((Gdk.EventMask)(256));
            this.cacheImages.Name = "cacheImages";
            this.notebook2.Add(this.cacheImages);
            Gtk.Notebook.NotebookChild w6 = ((Gtk.Notebook.NotebookChild)(this.notebook2[this.cacheImages]));
            w6.Position = 5;
            // Notebook tab
            this.label17 = new Gtk.Label();
            this.label17.Name = "label17";
            this.label17.LabelProp = Mono.Unix.Catalog.GetString("Images");
            this.notebook2.SetTabLabel(this.cacheImages, this.label17);
            this.label17.ShowAll();
            this.alignment1.Add(this.notebook2);
            this.Add(this.alignment1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Hide();
        }
    }
}
