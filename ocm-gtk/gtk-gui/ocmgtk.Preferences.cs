// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class Preferences {
        
        private Gtk.Notebook notebook1;
        
        private Gtk.Table table2;
        
        private Gtk.Frame frame2;
        
        private Gtk.Alignment GtkAlignment3;
        
        private ocmgtk.LocationWidget coordinateEntry;
        
        private Gtk.Label GtkLabel9;
        
        private Gtk.Frame frame3;
        
        private Gtk.Alignment GtkAlignment4;
        
        private Gtk.Table table8;
        
        private Gtk.HBox hbox2;
        
        private Gtk.Image image50;
        
        private Gtk.Label label25;
        
        private Gtk.Label label19;
        
        private Gtk.Label label2;
        
        private Gtk.Label label23;
        
        private Gtk.Label label24;
        
        private Gtk.Entry memberId;
        
        private Gtk.Entry memberId2;
        
        private Gtk.Entry memberId3;
        
        private Gtk.Entry memberId4;
        
        private Gtk.Label GtkLabel13;
        
        private Gtk.Label label6;
        
        private Gtk.Table table1;
        
        private Gtk.Button button937;
        
        private Gtk.Image image43;
        
        private Gtk.Button button938;
        
        private Gtk.Image image44;
        
        private Gtk.Entry dataDirEntry;
        
        private Gtk.HSeparator hseparator1;
        
        private Gtk.Entry importDirEntry;
        
        private Gtk.Label label15;
        
        private Gtk.Label label16;
        
        private Gtk.Label label17;
        
        private Gtk.Label label7;
        
        private Gtk.ComboBox startupFilterCombo;
        
        private Gtk.ComboBox unitsCombo;
        
        private Gtk.Label label3;
        
        private Gtk.Table table5;
        
        private Gtk.CheckButton autoCloseCheck;
        
        private Gtk.Label childLabel;
        
        private Gtk.CheckButton diffTerrCheck;
        
        private Gtk.CheckButton directEntryCheck;
        
        private Gtk.CheckButton dnfCheck;
        
        private Gtk.Frame frame1;
        
        private Gtk.Alignment GtkAlignment2;
        
        private Gtk.VBox vbox2;
        
        private Gtk.RadioButton solvedPuzzRadio;
        
        private Gtk.RadioButton solvedAllRadio;
        
        private Gtk.RadioButton solvedNoneRadio;
        
        private Gtk.Label GtkLabel6;
        
        private Gtk.HBox hbox4;
        
        private Gtk.Entry staleInterval;
        
        private Gtk.Label label18;
        
        private Gtk.HBox hbox7;
        
        private Gtk.Entry newCacheEntry;
        
        private Gtk.Label label26;
        
        private Gtk.HSeparator hseparator3;
        
        private Gtk.CheckButton mapPopupCheck;
        
        private Gtk.ComboBox prefixModeCombo;
        
        private Gtk.CheckButton selectCachesFromMapCheck;
        
        private Gtk.CheckButton showNewCaches;
        
        private Gtk.CheckButton staleCheck;
        
        private Gtk.Label label8;
        
        private Gtk.Table table3;
        
        private Gtk.ComboBox childPointCombo;
        
        private Gtk.HSeparator hseparator6;
        
        private Gtk.Label label12;
        
        private Gtk.Label label13;
        
        private Gtk.Label label5;
        
        private Gtk.Entry mapPointEntry;
        
        private ocmgtk.MapSelectionWidget mapsWidget;
        
        private Gtk.ComboBox nearbyCombo;
        
        private Gtk.Label label14;
        
        private Gtk.VBox vbox3;
        
        private Gtk.CheckButton recenterCheck;
        
        private Gtk.HBox hbox3;
        
        private Gtk.Label label21;
        
        private Gtk.Entry pollEntry;
        
        private Gtk.Label label22;
        
        private Gtk.Label label11;
        
        private Gtk.Table table4;
        
        private Gtk.Label label20;
        
        private Gtk.CheckButton updateCheck;
        
        private Gtk.Entry updateEntry;
        
        private Gtk.Label updatePane;
        
        private Gtk.VBox vbox4;
        
        private Gtk.CheckButton logTraceCheck;
        
        private Gtk.CheckButton clearTraceLog;
        
        private Gtk.Label debugPane;
        
        private Gtk.Button buttonCancel;
        
        private Gtk.Button buttonOk;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.Preferences
            this.WidthRequest = 750;
            this.Name = "ocmgtk.Preferences";
            this.Title = Mono.Unix.Catalog.GetString("Preferences...");
            this.TypeHint = ((Gdk.WindowTypeHint)(1));
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.Modal = true;
            this.BorderWidth = ((uint)(6));
            this.Resizable = false;
            this.AllowGrow = false;
            this.SkipPagerHint = true;
            this.SkipTaskbarHint = true;
            // Internal child ocmgtk.Preferences.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.notebook1 = new Gtk.Notebook();
            this.notebook1.CanFocus = true;
            this.notebook1.Name = "notebook1";
            this.notebook1.CurrentPage = 2;
            this.notebook1.TabPos = ((Gtk.PositionType)(0));
            // Container child notebook1.Gtk.Notebook+NotebookChild
            this.table2 = new Gtk.Table(((uint)(2)), ((uint)(3)), false);
            this.table2.Name = "table2";
            this.table2.RowSpacing = ((uint)(6));
            this.table2.ColumnSpacing = ((uint)(6));
            this.table2.BorderWidth = ((uint)(6));
            // Container child table2.Gtk.Table+TableChild
            this.frame2 = new Gtk.Frame();
            this.frame2.Name = "frame2";
            this.frame2.ShadowType = ((Gtk.ShadowType)(0));
            // Container child frame2.Gtk.Container+ContainerChild
            this.GtkAlignment3 = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment3.Name = "GtkAlignment3";
            this.GtkAlignment3.LeftPadding = ((uint)(12));
            // Container child GtkAlignment3.Gtk.Container+ContainerChild
            this.coordinateEntry = new ocmgtk.LocationWidget();
            this.coordinateEntry.Events = ((Gdk.EventMask)(256));
            this.coordinateEntry.Name = "coordinateEntry";
            this.coordinateEntry.Latitude = 0;
            this.coordinateEntry.Longitude = 0;
            this.GtkAlignment3.Add(this.coordinateEntry);
            this.frame2.Add(this.GtkAlignment3);
            this.GtkLabel9 = new Gtk.Label();
            this.GtkLabel9.Name = "GtkLabel9";
            this.GtkLabel9.LabelProp = Mono.Unix.Catalog.GetString("<b>Home Location</b>");
            this.GtkLabel9.UseMarkup = true;
            this.frame2.LabelWidget = this.GtkLabel9;
            this.table2.Add(this.frame2);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table2[this.frame2]));
            w4.RightAttach = ((uint)(3));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.frame3 = new Gtk.Frame();
            this.frame3.Name = "frame3";
            this.frame3.ShadowType = ((Gtk.ShadowType)(0));
            // Container child frame3.Gtk.Container+ContainerChild
            this.GtkAlignment4 = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment4.Name = "GtkAlignment4";
            this.GtkAlignment4.LeftPadding = ((uint)(12));
            // Container child GtkAlignment4.Gtk.Container+ContainerChild
            this.table8 = new Gtk.Table(((uint)(5)), ((uint)(2)), false);
            this.table8.Name = "table8";
            this.table8.RowSpacing = ((uint)(6));
            this.table8.ColumnSpacing = ((uint)(6));
            // Container child table8.Gtk.Table+TableChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            this.hbox2.BorderWidth = ((uint)(6));
            // Container child hbox2.Gtk.Box+BoxChild
            this.image50 = new Gtk.Image();
            this.image50.Name = "image50";
            this.image50.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-dialog-info", Gtk.IconSize.Button, 20);
            this.hbox2.Add(this.image50);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.hbox2[this.image50]));
            w5.Position = 0;
            w5.Expand = false;
            w5.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.label25 = new Gtk.Label();
            this.label25.Name = "label25";
            this.label25.LabelProp = Mono.Unix.Catalog.GetString("Changing or adding an account requires a restart of OCM");
            this.hbox2.Add(this.label25);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.hbox2[this.label25]));
            w6.Position = 1;
            w6.Expand = false;
            w6.Fill = false;
            this.table8.Add(this.hbox2);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table8[this.hbox2]));
            w7.RightAttach = ((uint)(2));
            w7.XOptions = ((Gtk.AttachOptions)(4));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table8.Gtk.Table+TableChild
            this.label19 = new Gtk.Label();
            this.label19.Name = "label19";
            this.label19.LabelProp = Mono.Unix.Catalog.GetString("User name or Account ID #2:");
            this.table8.Add(this.label19);
            Gtk.Table.TableChild w8 = ((Gtk.Table.TableChild)(this.table8[this.label19]));
            w8.TopAttach = ((uint)(2));
            w8.BottomAttach = ((uint)(3));
            w8.XOptions = ((Gtk.AttachOptions)(4));
            w8.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table8.Gtk.Table+TableChild
            this.label2 = new Gtk.Label();
            this.label2.Name = "label2";
            this.label2.Xalign = 0F;
            this.label2.LabelProp = Mono.Unix.Catalog.GetString("User name or Account ID:");
            this.table8.Add(this.label2);
            Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(this.table8[this.label2]));
            w9.TopAttach = ((uint)(1));
            w9.BottomAttach = ((uint)(2));
            w9.XOptions = ((Gtk.AttachOptions)(4));
            w9.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table8.Gtk.Table+TableChild
            this.label23 = new Gtk.Label();
            this.label23.Name = "label23";
            this.label23.LabelProp = Mono.Unix.Catalog.GetString("User name or Account ID #3:");
            this.table8.Add(this.label23);
            Gtk.Table.TableChild w10 = ((Gtk.Table.TableChild)(this.table8[this.label23]));
            w10.TopAttach = ((uint)(3));
            w10.BottomAttach = ((uint)(4));
            w10.XOptions = ((Gtk.AttachOptions)(4));
            w10.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table8.Gtk.Table+TableChild
            this.label24 = new Gtk.Label();
            this.label24.Name = "label24";
            this.label24.LabelProp = Mono.Unix.Catalog.GetString("User name or Account ID #4:");
            this.table8.Add(this.label24);
            Gtk.Table.TableChild w11 = ((Gtk.Table.TableChild)(this.table8[this.label24]));
            w11.TopAttach = ((uint)(4));
            w11.BottomAttach = ((uint)(5));
            w11.XOptions = ((Gtk.AttachOptions)(4));
            w11.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table8.Gtk.Table+TableChild
            this.memberId = new Gtk.Entry();
            this.memberId.CanFocus = true;
            this.memberId.Name = "memberId";
            this.memberId.IsEditable = true;
            this.memberId.InvisibleChar = '•';
            this.table8.Add(this.memberId);
            Gtk.Table.TableChild w12 = ((Gtk.Table.TableChild)(this.table8[this.memberId]));
            w12.TopAttach = ((uint)(1));
            w12.BottomAttach = ((uint)(2));
            w12.LeftAttach = ((uint)(1));
            w12.RightAttach = ((uint)(2));
            w12.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table8.Gtk.Table+TableChild
            this.memberId2 = new Gtk.Entry();
            this.memberId2.CanFocus = true;
            this.memberId2.Name = "memberId2";
            this.memberId2.IsEditable = true;
            this.memberId2.InvisibleChar = '•';
            this.table8.Add(this.memberId2);
            Gtk.Table.TableChild w13 = ((Gtk.Table.TableChild)(this.table8[this.memberId2]));
            w13.TopAttach = ((uint)(2));
            w13.BottomAttach = ((uint)(3));
            w13.LeftAttach = ((uint)(1));
            w13.RightAttach = ((uint)(2));
            w13.XOptions = ((Gtk.AttachOptions)(4));
            w13.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table8.Gtk.Table+TableChild
            this.memberId3 = new Gtk.Entry();
            this.memberId3.CanFocus = true;
            this.memberId3.Name = "memberId3";
            this.memberId3.IsEditable = true;
            this.memberId3.InvisibleChar = '•';
            this.table8.Add(this.memberId3);
            Gtk.Table.TableChild w14 = ((Gtk.Table.TableChild)(this.table8[this.memberId3]));
            w14.TopAttach = ((uint)(3));
            w14.BottomAttach = ((uint)(4));
            w14.LeftAttach = ((uint)(1));
            w14.RightAttach = ((uint)(2));
            w14.XOptions = ((Gtk.AttachOptions)(4));
            w14.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table8.Gtk.Table+TableChild
            this.memberId4 = new Gtk.Entry();
            this.memberId4.CanFocus = true;
            this.memberId4.Name = "memberId4";
            this.memberId4.IsEditable = true;
            this.memberId4.InvisibleChar = '•';
            this.table8.Add(this.memberId4);
            Gtk.Table.TableChild w15 = ((Gtk.Table.TableChild)(this.table8[this.memberId4]));
            w15.TopAttach = ((uint)(4));
            w15.BottomAttach = ((uint)(5));
            w15.LeftAttach = ((uint)(1));
            w15.RightAttach = ((uint)(2));
            w15.XOptions = ((Gtk.AttachOptions)(4));
            w15.YOptions = ((Gtk.AttachOptions)(4));
            this.GtkAlignment4.Add(this.table8);
            this.frame3.Add(this.GtkAlignment4);
            this.GtkLabel13 = new Gtk.Label();
            this.GtkLabel13.Name = "GtkLabel13";
            this.GtkLabel13.LabelProp = Mono.Unix.Catalog.GetString("<b>Account Information</b>");
            this.GtkLabel13.UseMarkup = true;
            this.frame3.LabelWidget = this.GtkLabel13;
            this.table2.Add(this.frame3);
            Gtk.Table.TableChild w18 = ((Gtk.Table.TableChild)(this.table2[this.frame3]));
            w18.TopAttach = ((uint)(1));
            w18.BottomAttach = ((uint)(2));
            w18.RightAttach = ((uint)(3));
            w18.XOptions = ((Gtk.AttachOptions)(4));
            w18.YOptions = ((Gtk.AttachOptions)(4));
            this.notebook1.Add(this.table2);
            // Notebook tab
            this.label6 = new Gtk.Label();
            this.label6.Name = "label6";
            this.label6.LabelProp = Mono.Unix.Catalog.GetString("Home/Account");
            this.notebook1.SetTabLabel(this.table2, this.label6);
            this.label6.ShowAll();
            // Container child notebook1.Gtk.Notebook+NotebookChild
            this.table1 = new Gtk.Table(((uint)(7)), ((uint)(3)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            this.table1.BorderWidth = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.button937 = new Gtk.Button();
            this.button937.CanFocus = true;
            this.button937.Name = "button937";
            // Container child button937.Gtk.Container+ContainerChild
            this.image43 = new Gtk.Image();
            this.image43.Name = "image43";
            this.image43.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-open", Gtk.IconSize.Button, 20);
            this.button937.Add(this.image43);
            this.button937.Label = null;
            this.table1.Add(this.button937);
            Gtk.Table.TableChild w21 = ((Gtk.Table.TableChild)(this.table1[this.button937]));
            w21.LeftAttach = ((uint)(2));
            w21.RightAttach = ((uint)(3));
            w21.XOptions = ((Gtk.AttachOptions)(4));
            w21.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.button938 = new Gtk.Button();
            this.button938.CanFocus = true;
            this.button938.Name = "button938";
            // Container child button938.Gtk.Container+ContainerChild
            this.image44 = new Gtk.Image();
            this.image44.Name = "image44";
            this.image44.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-open", Gtk.IconSize.Button, 20);
            this.button938.Add(this.image44);
            this.button938.Label = null;
            this.table1.Add(this.button938);
            Gtk.Table.TableChild w23 = ((Gtk.Table.TableChild)(this.table1[this.button938]));
            w23.TopAttach = ((uint)(1));
            w23.BottomAttach = ((uint)(2));
            w23.LeftAttach = ((uint)(2));
            w23.RightAttach = ((uint)(3));
            w23.XOptions = ((Gtk.AttachOptions)(4));
            w23.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.dataDirEntry = new Gtk.Entry();
            this.dataDirEntry.CanFocus = true;
            this.dataDirEntry.Name = "dataDirEntry";
            this.dataDirEntry.IsEditable = true;
            this.dataDirEntry.InvisibleChar = '•';
            this.table1.Add(this.dataDirEntry);
            Gtk.Table.TableChild w24 = ((Gtk.Table.TableChild)(this.table1[this.dataDirEntry]));
            w24.LeftAttach = ((uint)(1));
            w24.RightAttach = ((uint)(2));
            w24.XOptions = ((Gtk.AttachOptions)(4));
            w24.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.hseparator1 = new Gtk.HSeparator();
            this.hseparator1.Name = "hseparator1";
            this.table1.Add(this.hseparator1);
            Gtk.Table.TableChild w25 = ((Gtk.Table.TableChild)(this.table1[this.hseparator1]));
            w25.TopAttach = ((uint)(5));
            w25.BottomAttach = ((uint)(6));
            w25.RightAttach = ((uint)(3));
            w25.XOptions = ((Gtk.AttachOptions)(4));
            w25.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.importDirEntry = new Gtk.Entry();
            this.importDirEntry.CanFocus = true;
            this.importDirEntry.Name = "importDirEntry";
            this.importDirEntry.IsEditable = true;
            this.importDirEntry.InvisibleChar = '•';
            this.table1.Add(this.importDirEntry);
            Gtk.Table.TableChild w26 = ((Gtk.Table.TableChild)(this.table1[this.importDirEntry]));
            w26.TopAttach = ((uint)(1));
            w26.BottomAttach = ((uint)(2));
            w26.LeftAttach = ((uint)(1));
            w26.RightAttach = ((uint)(2));
            w26.XOptions = ((Gtk.AttachOptions)(4));
            w26.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label15 = new Gtk.Label();
            this.label15.Name = "label15";
            this.label15.Xalign = 0F;
            this.label15.LabelProp = Mono.Unix.Catalog.GetString("Startup Filter:");
            this.table1.Add(this.label15);
            Gtk.Table.TableChild w27 = ((Gtk.Table.TableChild)(this.table1[this.label15]));
            w27.TopAttach = ((uint)(2));
            w27.BottomAttach = ((uint)(3));
            w27.XOptions = ((Gtk.AttachOptions)(4));
            w27.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label16 = new Gtk.Label();
            this.label16.Name = "label16";
            this.label16.Xalign = 0F;
            this.label16.LabelProp = Mono.Unix.Catalog.GetString("Database Default Directory:");
            this.table1.Add(this.label16);
            Gtk.Table.TableChild w28 = ((Gtk.Table.TableChild)(this.table1[this.label16]));
            w28.XOptions = ((Gtk.AttachOptions)(4));
            w28.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label17 = new Gtk.Label();
            this.label17.Name = "label17";
            this.label17.Xalign = 0F;
            this.label17.LabelProp = Mono.Unix.Catalog.GetString("Import Default Directory:");
            this.table1.Add(this.label17);
            Gtk.Table.TableChild w29 = ((Gtk.Table.TableChild)(this.table1[this.label17]));
            w29.TopAttach = ((uint)(1));
            w29.BottomAttach = ((uint)(2));
            w29.XOptions = ((Gtk.AttachOptions)(4));
            w29.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label7 = new Gtk.Label();
            this.label7.Name = "label7";
            this.label7.Xalign = 0F;
            this.label7.LabelProp = Mono.Unix.Catalog.GetString("Units:");
            this.table1.Add(this.label7);
            Gtk.Table.TableChild w30 = ((Gtk.Table.TableChild)(this.table1[this.label7]));
            w30.TopAttach = ((uint)(3));
            w30.BottomAttach = ((uint)(4));
            w30.XOptions = ((Gtk.AttachOptions)(4));
            w30.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.startupFilterCombo = Gtk.ComboBox.NewText();
            this.startupFilterCombo.Name = "startupFilterCombo";
            this.table1.Add(this.startupFilterCombo);
            Gtk.Table.TableChild w31 = ((Gtk.Table.TableChild)(this.table1[this.startupFilterCombo]));
            w31.TopAttach = ((uint)(2));
            w31.BottomAttach = ((uint)(3));
            w31.LeftAttach = ((uint)(1));
            w31.RightAttach = ((uint)(2));
            w31.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.unitsCombo = Gtk.ComboBox.NewText();
            this.unitsCombo.AppendText(Mono.Unix.Catalog.GetString("Metric"));
            this.unitsCombo.AppendText(Mono.Unix.Catalog.GetString("U.S./Imperial"));
            this.unitsCombo.Name = "unitsCombo";
            this.unitsCombo.Active = 0;
            this.table1.Add(this.unitsCombo);
            Gtk.Table.TableChild w32 = ((Gtk.Table.TableChild)(this.table1[this.unitsCombo]));
            w32.TopAttach = ((uint)(3));
            w32.BottomAttach = ((uint)(4));
            w32.LeftAttach = ((uint)(1));
            w32.RightAttach = ((uint)(2));
            w32.XOptions = ((Gtk.AttachOptions)(4));
            w32.YOptions = ((Gtk.AttachOptions)(4));
            this.notebook1.Add(this.table1);
            Gtk.Notebook.NotebookChild w33 = ((Gtk.Notebook.NotebookChild)(this.notebook1[this.table1]));
            w33.Position = 1;
            // Notebook tab
            this.label3 = new Gtk.Label();
            this.label3.Name = "label3";
            this.label3.LabelProp = Mono.Unix.Catalog.GetString("General");
            this.notebook1.SetTabLabel(this.table1, this.label3);
            this.label3.ShowAll();
            // Container child notebook1.Gtk.Notebook+NotebookChild
            this.table5 = new Gtk.Table(((uint)(11)), ((uint)(2)), false);
            this.table5.Name = "table5";
            this.table5.RowSpacing = ((uint)(6));
            this.table5.ColumnSpacing = ((uint)(6));
            this.table5.BorderWidth = ((uint)(6));
            // Container child table5.Gtk.Table+TableChild
            this.autoCloseCheck = new Gtk.CheckButton();
            this.autoCloseCheck.CanFocus = true;
            this.autoCloseCheck.Name = "autoCloseCheck";
            this.autoCloseCheck.Label = Mono.Unix.Catalog.GetString("Don't show import/export summary on completion");
            this.autoCloseCheck.DrawIndicator = true;
            this.autoCloseCheck.UseUnderline = true;
            this.table5.Add(this.autoCloseCheck);
            Gtk.Table.TableChild w34 = ((Gtk.Table.TableChild)(this.table5[this.autoCloseCheck]));
            w34.TopAttach = ((uint)(2));
            w34.BottomAttach = ((uint)(3));
            w34.RightAttach = ((uint)(2));
            w34.XOptions = ((Gtk.AttachOptions)(4));
            w34.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.childLabel = new Gtk.Label();
            this.childLabel.Name = "childLabel";
            this.childLabel.Xalign = 0F;
            this.childLabel.LabelProp = Mono.Unix.Catalog.GetString("Child Waypoints:");
            this.table5.Add(this.childLabel);
            Gtk.Table.TableChild w35 = ((Gtk.Table.TableChild)(this.table5[this.childLabel]));
            w35.XOptions = ((Gtk.AttachOptions)(4));
            w35.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.diffTerrCheck = new Gtk.CheckButton();
            this.diffTerrCheck.CanFocus = true;
            this.diffTerrCheck.Name = "diffTerrCheck";
            this.diffTerrCheck.Label = Mono.Unix.Catalog.GetString("Show difficulty/terrain indicators on map");
            this.diffTerrCheck.DrawIndicator = true;
            this.diffTerrCheck.UseUnderline = true;
            this.table5.Add(this.diffTerrCheck);
            Gtk.Table.TableChild w36 = ((Gtk.Table.TableChild)(this.table5[this.diffTerrCheck]));
            w36.TopAttach = ((uint)(6));
            w36.BottomAttach = ((uint)(7));
            w36.RightAttach = ((uint)(2));
            w36.XOptions = ((Gtk.AttachOptions)(4));
            w36.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.directEntryCheck = new Gtk.CheckButton();
            this.directEntryCheck.CanFocus = true;
            this.directEntryCheck.Name = "directEntryCheck";
            this.directEntryCheck.Label = Mono.Unix.Catalog.GetString("Use direct entry mode for coordinates");
            this.directEntryCheck.DrawIndicator = true;
            this.directEntryCheck.UseUnderline = true;
            this.table5.Add(this.directEntryCheck);
            Gtk.Table.TableChild w37 = ((Gtk.Table.TableChild)(this.table5[this.directEntryCheck]));
            w37.TopAttach = ((uint)(4));
            w37.BottomAttach = ((uint)(5));
            w37.RightAttach = ((uint)(2));
            w37.XOptions = ((Gtk.AttachOptions)(4));
            w37.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.dnfCheck = new Gtk.CheckButton();
            this.dnfCheck.CanFocus = true;
            this.dnfCheck.Name = "dnfCheck";
            this.dnfCheck.Label = Mono.Unix.Catalog.GetString("Show DNF icon in list and on map");
            this.dnfCheck.DrawIndicator = true;
            this.dnfCheck.UseUnderline = true;
            this.table5.Add(this.dnfCheck);
            Gtk.Table.TableChild w38 = ((Gtk.Table.TableChild)(this.table5[this.dnfCheck]));
            w38.TopAttach = ((uint)(5));
            w38.BottomAttach = ((uint)(6));
            w38.RightAttach = ((uint)(2));
            w38.XOptions = ((Gtk.AttachOptions)(4));
            w38.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.frame1 = new Gtk.Frame();
            this.frame1.Name = "frame1";
            this.frame1.ShadowType = ((Gtk.ShadowType)(0));
            // Container child frame1.Gtk.Container+ContainerChild
            this.GtkAlignment2 = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment2.Name = "GtkAlignment2";
            this.GtkAlignment2.LeftPadding = ((uint)(12));
            // Container child GtkAlignment2.Gtk.Container+ContainerChild
            this.vbox2 = new Gtk.VBox();
            this.vbox2.Name = "vbox2";
            this.vbox2.Spacing = 6;
            // Container child vbox2.Gtk.Box+BoxChild
            this.solvedPuzzRadio = new Gtk.RadioButton(Mono.Unix.Catalog.GetString("Only puzzle cache types with corrected coordinats/final location"));
            this.solvedPuzzRadio.CanFocus = true;
            this.solvedPuzzRadio.Name = "solvedPuzzRadio";
            this.solvedPuzzRadio.DrawIndicator = true;
            this.solvedPuzzRadio.UseUnderline = true;
            this.solvedPuzzRadio.Group = new GLib.SList(System.IntPtr.Zero);
            this.vbox2.Add(this.solvedPuzzRadio);
            Gtk.Box.BoxChild w39 = ((Gtk.Box.BoxChild)(this.vbox2[this.solvedPuzzRadio]));
            w39.Position = 0;
            w39.Expand = false;
            w39.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.solvedAllRadio = new Gtk.RadioButton(Mono.Unix.Catalog.GetString("All caches with corrected coordinates/final location"));
            this.solvedAllRadio.CanFocus = true;
            this.solvedAllRadio.Name = "solvedAllRadio";
            this.solvedAllRadio.DrawIndicator = true;
            this.solvedAllRadio.UseUnderline = true;
            this.solvedAllRadio.Group = this.solvedPuzzRadio.Group;
            this.vbox2.Add(this.solvedAllRadio);
            Gtk.Box.BoxChild w40 = ((Gtk.Box.BoxChild)(this.vbox2[this.solvedAllRadio]));
            w40.Position = 1;
            w40.Expand = false;
            w40.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.solvedNoneRadio = new Gtk.RadioButton(Mono.Unix.Catalog.GetString("Never Show"));
            this.solvedNoneRadio.CanFocus = true;
            this.solvedNoneRadio.Name = "solvedNoneRadio";
            this.solvedNoneRadio.DrawIndicator = true;
            this.solvedNoneRadio.UseUnderline = true;
            this.solvedNoneRadio.Group = this.solvedPuzzRadio.Group;
            this.vbox2.Add(this.solvedNoneRadio);
            Gtk.Box.BoxChild w41 = ((Gtk.Box.BoxChild)(this.vbox2[this.solvedNoneRadio]));
            w41.Position = 2;
            w41.Expand = false;
            w41.Fill = false;
            this.GtkAlignment2.Add(this.vbox2);
            this.frame1.Add(this.GtkAlignment2);
            this.GtkLabel6 = new Gtk.Label();
            this.GtkLabel6.Name = "GtkLabel6";
            this.GtkLabel6.LabelProp = Mono.Unix.Catalog.GetString("<b>Solved puzzle icon</b>");
            this.GtkLabel6.UseMarkup = true;
            this.frame1.LabelWidget = this.GtkLabel6;
            this.table5.Add(this.frame1);
            Gtk.Table.TableChild w44 = ((Gtk.Table.TableChild)(this.table5[this.frame1]));
            w44.TopAttach = ((uint)(8));
            w44.BottomAttach = ((uint)(9));
            w44.RightAttach = ((uint)(2));
            w44.XOptions = ((Gtk.AttachOptions)(4));
            w44.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.hbox4 = new Gtk.HBox();
            this.hbox4.Name = "hbox4";
            this.hbox4.Spacing = 6;
            // Container child hbox4.Gtk.Box+BoxChild
            this.staleInterval = new Gtk.Entry();
            this.staleInterval.CanFocus = true;
            this.staleInterval.Name = "staleInterval";
            this.staleInterval.Text = Mono.Unix.Catalog.GetString("60");
            this.staleInterval.IsEditable = true;
            this.staleInterval.WidthChars = 4;
            this.staleInterval.InvisibleChar = '●';
            this.hbox4.Add(this.staleInterval);
            Gtk.Box.BoxChild w45 = ((Gtk.Box.BoxChild)(this.hbox4[this.staleInterval]));
            w45.Position = 0;
            w45.Expand = false;
            // Container child hbox4.Gtk.Box+BoxChild
            this.label18 = new Gtk.Label();
            this.label18.Name = "label18";
            this.label18.LabelProp = Mono.Unix.Catalog.GetString("days");
            this.hbox4.Add(this.label18);
            Gtk.Box.BoxChild w46 = ((Gtk.Box.BoxChild)(this.hbox4[this.label18]));
            w46.Position = 1;
            w46.Expand = false;
            w46.Fill = false;
            this.table5.Add(this.hbox4);
            Gtk.Table.TableChild w47 = ((Gtk.Table.TableChild)(this.table5[this.hbox4]));
            w47.TopAttach = ((uint)(9));
            w47.BottomAttach = ((uint)(10));
            w47.LeftAttach = ((uint)(1));
            w47.RightAttach = ((uint)(2));
            w47.XOptions = ((Gtk.AttachOptions)(4));
            w47.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.hbox7 = new Gtk.HBox();
            this.hbox7.Name = "hbox7";
            this.hbox7.Spacing = 6;
            // Container child hbox7.Gtk.Box+BoxChild
            this.newCacheEntry = new Gtk.Entry();
            this.newCacheEntry.CanFocus = true;
            this.newCacheEntry.Name = "newCacheEntry";
            this.newCacheEntry.Text = Mono.Unix.Catalog.GetString("14");
            this.newCacheEntry.IsEditable = true;
            this.newCacheEntry.WidthChars = 4;
            this.newCacheEntry.InvisibleChar = '●';
            this.hbox7.Add(this.newCacheEntry);
            Gtk.Box.BoxChild w48 = ((Gtk.Box.BoxChild)(this.hbox7[this.newCacheEntry]));
            w48.Position = 0;
            w48.Expand = false;
            // Container child hbox7.Gtk.Box+BoxChild
            this.label26 = new Gtk.Label();
            this.label26.Name = "label26";
            this.label26.Xalign = 0F;
            this.label26.LabelProp = Mono.Unix.Catalog.GetString("days");
            this.hbox7.Add(this.label26);
            Gtk.Box.BoxChild w49 = ((Gtk.Box.BoxChild)(this.hbox7[this.label26]));
            w49.Position = 1;
            this.table5.Add(this.hbox7);
            Gtk.Table.TableChild w50 = ((Gtk.Table.TableChild)(this.table5[this.hbox7]));
            w50.TopAttach = ((uint)(10));
            w50.BottomAttach = ((uint)(11));
            w50.LeftAttach = ((uint)(1));
            w50.RightAttach = ((uint)(2));
            w50.XOptions = ((Gtk.AttachOptions)(4));
            w50.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.hseparator3 = new Gtk.HSeparator();
            this.hseparator3.Name = "hseparator3";
            this.table5.Add(this.hseparator3);
            Gtk.Table.TableChild w51 = ((Gtk.Table.TableChild)(this.table5[this.hseparator3]));
            w51.TopAttach = ((uint)(1));
            w51.BottomAttach = ((uint)(2));
            w51.RightAttach = ((uint)(2));
            w51.XOptions = ((Gtk.AttachOptions)(4));
            w51.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.mapPopupCheck = new Gtk.CheckButton();
            this.mapPopupCheck.CanFocus = true;
            this.mapPopupCheck.Name = "mapPopupCheck";
            this.mapPopupCheck.Label = Mono.Unix.Catalog.GetString("Show Map Popups");
            this.mapPopupCheck.DrawIndicator = true;
            this.mapPopupCheck.UseUnderline = true;
            this.table5.Add(this.mapPopupCheck);
            Gtk.Table.TableChild w52 = ((Gtk.Table.TableChild)(this.table5[this.mapPopupCheck]));
            w52.TopAttach = ((uint)(7));
            w52.BottomAttach = ((uint)(8));
            w52.RightAttach = ((uint)(2));
            w52.XOptions = ((Gtk.AttachOptions)(4));
            w52.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.prefixModeCombo = Gtk.ComboBox.NewText();
            this.prefixModeCombo.AppendText(Mono.Unix.Catalog.GetString("Prefix with Type (e.g. PKABCD01)"));
            this.prefixModeCombo.AppendText(Mono.Unix.Catalog.GetString("Use GC name (e.g. GCABCD01)"));
            this.prefixModeCombo.Name = "prefixModeCombo";
            this.prefixModeCombo.Active = 0;
            this.table5.Add(this.prefixModeCombo);
            Gtk.Table.TableChild w53 = ((Gtk.Table.TableChild)(this.table5[this.prefixModeCombo]));
            w53.LeftAttach = ((uint)(1));
            w53.RightAttach = ((uint)(2));
            w53.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.selectCachesFromMapCheck = new Gtk.CheckButton();
            this.selectCachesFromMapCheck.CanFocus = true;
            this.selectCachesFromMapCheck.Name = "selectCachesFromMapCheck";
            this.selectCachesFromMapCheck.Label = Mono.Unix.Catalog.GetString("Automatically select cache when clicked on the map");
            this.selectCachesFromMapCheck.DrawIndicator = true;
            this.selectCachesFromMapCheck.UseUnderline = true;
            this.table5.Add(this.selectCachesFromMapCheck);
            Gtk.Table.TableChild w54 = ((Gtk.Table.TableChild)(this.table5[this.selectCachesFromMapCheck]));
            w54.TopAttach = ((uint)(3));
            w54.BottomAttach = ((uint)(4));
            w54.RightAttach = ((uint)(2));
            w54.XOptions = ((Gtk.AttachOptions)(4));
            w54.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.showNewCaches = new Gtk.CheckButton();
            this.showNewCaches.CanFocus = true;
            this.showNewCaches.Name = "showNewCaches";
            this.showNewCaches.Label = Mono.Unix.Catalog.GetString("Highlight new caches published within:");
            this.showNewCaches.DrawIndicator = true;
            this.showNewCaches.UseUnderline = true;
            this.table5.Add(this.showNewCaches);
            Gtk.Table.TableChild w55 = ((Gtk.Table.TableChild)(this.table5[this.showNewCaches]));
            w55.TopAttach = ((uint)(10));
            w55.BottomAttach = ((uint)(11));
            w55.XOptions = ((Gtk.AttachOptions)(4));
            w55.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table5.Gtk.Table+TableChild
            this.staleCheck = new Gtk.CheckButton();
            this.staleCheck.CanFocus = true;
            this.staleCheck.Name = "staleCheck";
            this.staleCheck.Label = Mono.Unix.Catalog.GetString("Highlight caches not updated within:");
            this.staleCheck.DrawIndicator = true;
            this.staleCheck.UseUnderline = true;
            this.table5.Add(this.staleCheck);
            Gtk.Table.TableChild w56 = ((Gtk.Table.TableChild)(this.table5[this.staleCheck]));
            w56.TopAttach = ((uint)(9));
            w56.BottomAttach = ((uint)(10));
            w56.XOptions = ((Gtk.AttachOptions)(4));
            w56.YOptions = ((Gtk.AttachOptions)(4));
            this.notebook1.Add(this.table5);
            Gtk.Notebook.NotebookChild w57 = ((Gtk.Notebook.NotebookChild)(this.notebook1[this.table5]));
            w57.Position = 2;
            // Notebook tab
            this.label8 = new Gtk.Label();
            this.label8.Name = "label8";
            this.label8.LabelProp = Mono.Unix.Catalog.GetString("Behaviour");
            this.notebook1.SetTabLabel(this.table5, this.label8);
            this.label8.ShowAll();
            // Container child notebook1.Gtk.Notebook+NotebookChild
            this.table3 = new Gtk.Table(((uint)(5)), ((uint)(2)), false);
            this.table3.Name = "table3";
            this.table3.RowSpacing = ((uint)(6));
            this.table3.ColumnSpacing = ((uint)(6));
            this.table3.BorderWidth = ((uint)(6));
            // Container child table3.Gtk.Table+TableChild
            this.childPointCombo = Gtk.ComboBox.NewText();
            this.childPointCombo.AppendText(Mono.Unix.Catalog.GetString("Selected Cache Only"));
            this.childPointCombo.AppendText(Mono.Unix.Catalog.GetString("All Waypoints"));
            this.childPointCombo.Name = "childPointCombo";
            this.childPointCombo.Active = 0;
            this.table3.Add(this.childPointCombo);
            Gtk.Table.TableChild w58 = ((Gtk.Table.TableChild)(this.table3[this.childPointCombo]));
            w58.TopAttach = ((uint)(1));
            w58.BottomAttach = ((uint)(2));
            w58.LeftAttach = ((uint)(1));
            w58.RightAttach = ((uint)(2));
            w58.XOptions = ((Gtk.AttachOptions)(4));
            w58.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.hseparator6 = new Gtk.HSeparator();
            this.hseparator6.Name = "hseparator6";
            this.table3.Add(this.hseparator6);
            Gtk.Table.TableChild w59 = ((Gtk.Table.TableChild)(this.table3[this.hseparator6]));
            w59.TopAttach = ((uint)(3));
            w59.BottomAttach = ((uint)(4));
            w59.RightAttach = ((uint)(2));
            w59.XOptions = ((Gtk.AttachOptions)(4));
            w59.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.label12 = new Gtk.Label();
            this.label12.Name = "label12";
            this.label12.Xalign = 0F;
            this.label12.LabelProp = Mono.Unix.Catalog.GetString("Child Waypoints:");
            this.table3.Add(this.label12);
            Gtk.Table.TableChild w60 = ((Gtk.Table.TableChild)(this.table3[this.label12]));
            w60.TopAttach = ((uint)(1));
            w60.BottomAttach = ((uint)(2));
            w60.XOptions = ((Gtk.AttachOptions)(4));
            w60.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.label13 = new Gtk.Label();
            this.label13.Name = "label13";
            this.label13.Xalign = 0F;
            this.label13.LabelProp = Mono.Unix.Catalog.GetString("Caches on Map:");
            this.table3.Add(this.label13);
            Gtk.Table.TableChild w61 = ((Gtk.Table.TableChild)(this.table3[this.label13]));
            w61.TopAttach = ((uint)(2));
            w61.BottomAttach = ((uint)(3));
            w61.XOptions = ((Gtk.AttachOptions)(4));
            w61.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.label5 = new Gtk.Label();
            this.label5.Name = "label5";
            this.label5.Xalign = 0F;
            this.label5.LabelProp = Mono.Unix.Catalog.GetString("Nearby Caches on Map:");
            this.table3.Add(this.label5);
            Gtk.Table.TableChild w62 = ((Gtk.Table.TableChild)(this.table3[this.label5]));
            w62.XOptions = ((Gtk.AttachOptions)(4));
            w62.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.mapPointEntry = new Gtk.Entry();
            this.mapPointEntry.CanFocus = true;
            this.mapPointEntry.Name = "mapPointEntry";
            this.mapPointEntry.Text = Mono.Unix.Catalog.GetString("100");
            this.mapPointEntry.IsEditable = true;
            this.mapPointEntry.InvisibleChar = '•';
            this.table3.Add(this.mapPointEntry);
            Gtk.Table.TableChild w63 = ((Gtk.Table.TableChild)(this.table3[this.mapPointEntry]));
            w63.TopAttach = ((uint)(2));
            w63.BottomAttach = ((uint)(3));
            w63.LeftAttach = ((uint)(1));
            w63.RightAttach = ((uint)(2));
            w63.XOptions = ((Gtk.AttachOptions)(4));
            w63.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.mapsWidget = new ocmgtk.MapSelectionWidget();
            this.mapsWidget.Events = ((Gdk.EventMask)(256));
            this.mapsWidget.Name = "mapsWidget";
            this.table3.Add(this.mapsWidget);
            Gtk.Table.TableChild w64 = ((Gtk.Table.TableChild)(this.table3[this.mapsWidget]));
            w64.TopAttach = ((uint)(4));
            w64.BottomAttach = ((uint)(5));
            w64.RightAttach = ((uint)(2));
            w64.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.nearbyCombo = Gtk.ComboBox.NewText();
            this.nearbyCombo.AppendText(Mono.Unix.Catalog.GetString("Enabled on Startup"));
            this.nearbyCombo.AppendText(Mono.Unix.Catalog.GetString("Disabled on Startup"));
            this.nearbyCombo.Name = "nearbyCombo";
            this.nearbyCombo.Active = 0;
            this.table3.Add(this.nearbyCombo);
            Gtk.Table.TableChild w65 = ((Gtk.Table.TableChild)(this.table3[this.nearbyCombo]));
            w65.LeftAttach = ((uint)(1));
            w65.RightAttach = ((uint)(2));
            w65.XOptions = ((Gtk.AttachOptions)(4));
            w65.YOptions = ((Gtk.AttachOptions)(4));
            this.notebook1.Add(this.table3);
            Gtk.Notebook.NotebookChild w66 = ((Gtk.Notebook.NotebookChild)(this.notebook1[this.table3]));
            w66.Position = 3;
            // Notebook tab
            this.label14 = new Gtk.Label();
            this.label14.Name = "label14";
            this.label14.LabelProp = Mono.Unix.Catalog.GetString("Map");
            this.notebook1.SetTabLabel(this.table3, this.label14);
            this.label14.ShowAll();
            // Container child notebook1.Gtk.Notebook+NotebookChild
            this.vbox3 = new Gtk.VBox();
            this.vbox3.Name = "vbox3";
            this.vbox3.Spacing = 6;
            this.vbox3.BorderWidth = ((uint)(6));
            // Container child vbox3.Gtk.Box+BoxChild
            this.recenterCheck = new Gtk.CheckButton();
            this.recenterCheck.CanFocus = true;
            this.recenterCheck.Name = "recenterCheck";
            this.recenterCheck.Label = Mono.Unix.Catalog.GetString("Continuously Recenter Map");
            this.recenterCheck.Active = true;
            this.recenterCheck.DrawIndicator = true;
            this.recenterCheck.UseUnderline = true;
            this.vbox3.Add(this.recenterCheck);
            Gtk.Box.BoxChild w67 = ((Gtk.Box.BoxChild)(this.vbox3[this.recenterCheck]));
            w67.Position = 0;
            w67.Expand = false;
            w67.Fill = false;
            // Container child vbox3.Gtk.Box+BoxChild
            this.hbox3 = new Gtk.HBox();
            this.hbox3.Name = "hbox3";
            this.hbox3.Spacing = 6;
            // Container child hbox3.Gtk.Box+BoxChild
            this.label21 = new Gtk.Label();
            this.label21.Name = "label21";
            this.label21.LabelProp = Mono.Unix.Catalog.GetString("Poll Interval:");
            this.hbox3.Add(this.label21);
            Gtk.Box.BoxChild w68 = ((Gtk.Box.BoxChild)(this.hbox3[this.label21]));
            w68.Position = 0;
            w68.Expand = false;
            w68.Fill = false;
            // Container child hbox3.Gtk.Box+BoxChild
            this.pollEntry = new Gtk.Entry();
            this.pollEntry.CanFocus = true;
            this.pollEntry.Name = "pollEntry";
            this.pollEntry.Text = Mono.Unix.Catalog.GetString("30");
            this.pollEntry.IsEditable = true;
            this.pollEntry.InvisibleChar = '•';
            this.hbox3.Add(this.pollEntry);
            Gtk.Box.BoxChild w69 = ((Gtk.Box.BoxChild)(this.hbox3[this.pollEntry]));
            w69.Position = 1;
            w69.Expand = false;
            // Container child hbox3.Gtk.Box+BoxChild
            this.label22 = new Gtk.Label();
            this.label22.Name = "label22";
            this.label22.LabelProp = Mono.Unix.Catalog.GetString("seconds");
            this.hbox3.Add(this.label22);
            Gtk.Box.BoxChild w70 = ((Gtk.Box.BoxChild)(this.hbox3[this.label22]));
            w70.Position = 2;
            w70.Expand = false;
            w70.Fill = false;
            this.vbox3.Add(this.hbox3);
            Gtk.Box.BoxChild w71 = ((Gtk.Box.BoxChild)(this.vbox3[this.hbox3]));
            w71.Position = 1;
            w71.Expand = false;
            w71.Fill = false;
            this.notebook1.Add(this.vbox3);
            Gtk.Notebook.NotebookChild w72 = ((Gtk.Notebook.NotebookChild)(this.notebook1[this.vbox3]));
            w72.Position = 4;
            // Notebook tab
            this.label11 = new Gtk.Label();
            this.label11.Name = "label11";
            this.label11.LabelProp = Mono.Unix.Catalog.GetString("GPSD");
            this.notebook1.SetTabLabel(this.vbox3, this.label11);
            this.label11.ShowAll();
            // Container child notebook1.Gtk.Notebook+NotebookChild
            this.table4 = new Gtk.Table(((uint)(2)), ((uint)(3)), false);
            this.table4.Name = "table4";
            this.table4.RowSpacing = ((uint)(6));
            this.table4.ColumnSpacing = ((uint)(6));
            this.table4.BorderWidth = ((uint)(6));
            // Container child table4.Gtk.Table+TableChild
            this.label20 = new Gtk.Label();
            this.label20.Name = "label20";
            this.label20.LabelProp = Mono.Unix.Catalog.GetString("days");
            this.table4.Add(this.label20);
            Gtk.Table.TableChild w73 = ((Gtk.Table.TableChild)(this.table4[this.label20]));
            w73.LeftAttach = ((uint)(2));
            w73.RightAttach = ((uint)(3));
            w73.XOptions = ((Gtk.AttachOptions)(4));
            w73.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table4.Gtk.Table+TableChild
            this.updateCheck = new Gtk.CheckButton();
            this.updateCheck.CanFocus = true;
            this.updateCheck.Name = "updateCheck";
            this.updateCheck.Label = Mono.Unix.Catalog.GetString("Check for updates every");
            this.updateCheck.Active = true;
            this.updateCheck.DrawIndicator = true;
            this.updateCheck.UseUnderline = true;
            this.table4.Add(this.updateCheck);
            Gtk.Table.TableChild w74 = ((Gtk.Table.TableChild)(this.table4[this.updateCheck]));
            w74.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table4.Gtk.Table+TableChild
            this.updateEntry = new Gtk.Entry();
            this.updateEntry.CanFocus = true;
            this.updateEntry.Name = "updateEntry";
            this.updateEntry.Text = Mono.Unix.Catalog.GetString("7");
            this.updateEntry.IsEditable = true;
            this.updateEntry.InvisibleChar = '•';
            this.updateEntry.Xalign = 1F;
            this.table4.Add(this.updateEntry);
            Gtk.Table.TableChild w75 = ((Gtk.Table.TableChild)(this.table4[this.updateEntry]));
            w75.LeftAttach = ((uint)(1));
            w75.RightAttach = ((uint)(2));
            w75.YOptions = ((Gtk.AttachOptions)(4));
            this.notebook1.Add(this.table4);
            Gtk.Notebook.NotebookChild w76 = ((Gtk.Notebook.NotebookChild)(this.notebook1[this.table4]));
            w76.Position = 5;
            // Notebook tab
            this.updatePane = new Gtk.Label();
            this.updatePane.Name = "updatePane";
            this.updatePane.LabelProp = Mono.Unix.Catalog.GetString("Update");
            this.notebook1.SetTabLabel(this.table4, this.updatePane);
            this.updatePane.ShowAll();
            // Container child notebook1.Gtk.Notebook+NotebookChild
            this.vbox4 = new Gtk.VBox();
            this.vbox4.Name = "vbox4";
            this.vbox4.Spacing = 6;
            this.vbox4.BorderWidth = ((uint)(6));
            // Container child vbox4.Gtk.Box+BoxChild
            this.logTraceCheck = new Gtk.CheckButton();
            this.logTraceCheck.CanFocus = true;
            this.logTraceCheck.Name = "logTraceCheck";
            this.logTraceCheck.Label = Mono.Unix.Catalog.GetString("Enable Trace Log");
            this.logTraceCheck.DrawIndicator = true;
            this.logTraceCheck.UseUnderline = true;
            this.vbox4.Add(this.logTraceCheck);
            Gtk.Box.BoxChild w77 = ((Gtk.Box.BoxChild)(this.vbox4[this.logTraceCheck]));
            w77.Position = 0;
            w77.Expand = false;
            w77.Fill = false;
            // Container child vbox4.Gtk.Box+BoxChild
            this.clearTraceLog = new Gtk.CheckButton();
            this.clearTraceLog.Sensitive = false;
            this.clearTraceLog.CanFocus = true;
            this.clearTraceLog.Name = "clearTraceLog";
            this.clearTraceLog.Label = Mono.Unix.Catalog.GetString("Clear Log on Startup");
            this.clearTraceLog.DrawIndicator = true;
            this.clearTraceLog.UseUnderline = true;
            this.vbox4.Add(this.clearTraceLog);
            Gtk.Box.BoxChild w78 = ((Gtk.Box.BoxChild)(this.vbox4[this.clearTraceLog]));
            w78.Position = 1;
            w78.Expand = false;
            w78.Fill = false;
            this.notebook1.Add(this.vbox4);
            Gtk.Notebook.NotebookChild w79 = ((Gtk.Notebook.NotebookChild)(this.notebook1[this.vbox4]));
            w79.Position = 6;
            // Notebook tab
            this.debugPane = new Gtk.Label();
            this.debugPane.Name = "debugPane";
            this.debugPane.LabelProp = Mono.Unix.Catalog.GetString("Logging");
            this.notebook1.SetTabLabel(this.vbox4, this.debugPane);
            this.debugPane.ShowAll();
            w1.Add(this.notebook1);
            Gtk.Box.BoxChild w80 = ((Gtk.Box.BoxChild)(w1[this.notebook1]));
            w80.Position = 0;
            // Internal child ocmgtk.Preferences.ActionArea
            Gtk.HButtonBox w81 = this.ActionArea;
            w81.Name = "dialog1_ActionArea";
            w81.Spacing = 10;
            w81.BorderWidth = ((uint)(5));
            w81.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonCancel = new Gtk.Button();
            this.buttonCancel.CanDefault = true;
            this.buttonCancel.CanFocus = true;
            this.buttonCancel.Name = "buttonCancel";
            this.buttonCancel.UseStock = true;
            this.buttonCancel.UseUnderline = true;
            this.buttonCancel.Label = "gtk-cancel";
            this.AddActionWidget(this.buttonCancel, -6);
            Gtk.ButtonBox.ButtonBoxChild w82 = ((Gtk.ButtonBox.ButtonBoxChild)(w81[this.buttonCancel]));
            w82.Expand = false;
            w82.Fill = false;
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonOk = new Gtk.Button();
            this.buttonOk.CanDefault = true;
            this.buttonOk.CanFocus = true;
            this.buttonOk.Name = "buttonOk";
            this.buttonOk.UseStock = true;
            this.buttonOk.UseUnderline = true;
            this.buttonOk.Label = "gtk-ok";
            this.AddActionWidget(this.buttonOk, -5);
            Gtk.ButtonBox.ButtonBoxChild w83 = ((Gtk.ButtonBox.ButtonBoxChild)(w81[this.buttonOk]));
            w83.Position = 1;
            w83.Expand = false;
            w83.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 762;
            this.DefaultHeight = 528;
            this.buttonOk.HasDefault = true;
            this.Show();
            this.button938.Clicked += new System.EventHandler(this.OnImpDirClicked);
            this.button937.Clicked += new System.EventHandler(this.OnDBDirClick);
            this.updateCheck.Toggled += new System.EventHandler(this.OnUpdateCheckToggle);
            this.logTraceCheck.Toggled += new System.EventHandler(this.OnTraceToggle);
            this.buttonCancel.Clicked += new System.EventHandler(this.OnCancelClicked);
            this.buttonOk.Clicked += new System.EventHandler(this.OnButtonOkClicked);
        }
    }
}
