// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class OCMMainWindow {
        
        private Gtk.UIManager UIManager;
        
        private Gtk.Action FileAction;
        
        private Gtk.Action EditAction;
        
        private Gtk.Action ViewAction;
        
        private Gtk.Action FilterAction;
        
        private Gtk.Action GoAction;
        
        private Gtk.Action BookmarksAction;
        
        private Gtk.Action CacheAction;
        
        private Gtk.Action WebAction;
        
        private Gtk.Action GPSAction;
        
        private Gtk.Action ToolsAction;
        
        private Gtk.Action HelpAction;
        
        private Gtk.Action NewAction;
        
        private Gtk.Action openAction;
        
        private Gtk.Action CompactDatabaseAction;
        
        private Gtk.Action quitAction;
        
        private Gtk.Action NewDatabaseAction;
        
        private Gtk.Action NewCacheAction;
        
        private Gtk.ToggleAction ShowNearbyCachesAction;
        
        private Gtk.Action ChildWaypointsAction;
        
        private Gtk.Action FieldNotesAction;
        
        private Gtk.RadioAction SelectedCacheOnlyAction;
        
        private Gtk.RadioAction AllWaypointsAction;
        
        private Gtk.Action printAction;
        
        private Gtk.Action LocationsAction;
        
        private Gtk.Action AddLocationAction;
        
        private Gtk.Action DeleteLocationAction;
        
        private Gtk.Action PanToCentreAction;
        
        private Gtk.Action PanToSelectedCacheAction;
        
        private Gtk.Action ZoomToSelectedCacheAction;
        
        private Gtk.Action AdvancedFiltersAction;
        
        private Gtk.Action CombinationFilterAction;
        
        private Gtk.Action ClearAdvancedFiltersAction;
        
        private Gtk.Action ClearComboFilterAction;
        
        private Gtk.Action ClearAllFiltersAction;
        
        private Gtk.Action QuickFilterAction;
        
        private Gtk.Action OCMWikiAction;
        
        private Gtk.Action OCMForumsAction;
        
        private Gtk.Action AboutAction;
        
        private Gtk.Action ChangeHistoryAction;
        
        private Gtk.Action CheckForUpdatesAction;
        
        private Gtk.Action OCMHomePageAction;
        
        private Gtk.Action GeocachingComAction;
        
        private Gtk.Action TerracachingComAction;
        
        private Gtk.Action OpencachingAction;
        
        private Gtk.Action GPSBabelHomePageAction;
        
        private Gtk.Action GPSDHomePageAction;
        
        private Gtk.Action HomePageAction;
        
        private Gtk.Action ViewMyProfileAction;
        
        private Gtk.Action MyAccountDetailsAction;
        
        private Gtk.Action CreatePocketQueriesAction;
        
        private Gtk.Action StatisticsAction;
        
        private Gtk.Action FindACacheAction;
        
        private Gtk.Action TCHomePageAction;
        
        private Gtk.Action ToDoListAction;
        
        private Gtk.Action TraditionalAction;
        
        private Gtk.Action LocationlessAction;
        
        private Gtk.Action ListOfCountrySitesAction;
        
        private Gtk.Action NavicacheComAction;
        
        private Gtk.Action NVHomePageAction;
        
        private Gtk.Action MyNavicacheAction;
        
        private Gtk.Action MarkAction;
        
        private Gtk.Action AddChildWaypointAction;
        
        private Gtk.Action CorrectedCoordinatesAction;
        
        private Gtk.Action ViewOnlineAction;
        
        private Gtk.Action SetSelectedCacheAsCentreAction;
        
        private Gtk.Action ModifyCacheAction;
        
        private Gtk.Action MarkFoundAction;
        
        private Gtk.Action MarkFirstToFindAction;
        
        private Gtk.Action MarkDidNotFindAction;
        
        private Gtk.Action MarkUnfoundAction;
        
        private Gtk.Action MarkDisabledAction;
        
        private Gtk.Action MarkArchivedAction;
        
        private Gtk.Action MarkAvailableAction;
        
        private Gtk.Action BookmarkListAction;
        
        private Gtk.Action AddAllUnfilteredCachesToAction;
        
        private Gtk.Action AddSelectedCacheToAction;
        
        private Gtk.Action RemoveSelectedCacheFromBookmarkListAction;
        
        private Gtk.Action CreateBookmarkListAction;
        
        private Gtk.Action DeleteBookmarkListAction;
        
        private Gtk.Action ZoomToCentreAction;
        
        private Gtk.Action ImportGPXLocZipAction;
        
        private Gtk.Action ImportDirectoryAction;
        
        private Gtk.Action SaveCurrentViewAsQuickFilterAction;
        
        private Gtk.Action DeleteQuickFilterAction;
        
        private Gtk.Action ExportAction;
        
        private Gtk.Action ExportGPXAction;
        
        private Gtk.Action ExportFindsGPXAction;
        
        private Gtk.Action ExportGarminPOIFileAction;
        
        private Gtk.Action CopyToAction;
        
        private Gtk.Action MoveToAction;
        
        private Gtk.Action DeleteAction;
        
        private Gtk.Action DeleteAllAction;
        
        private Gtk.Action DeselectAction;
        
        private Gtk.Action PreferencesAction;
        
        private Gtk.Action TransferCachesToLastUsedAction;
        
        private Gtk.Action ReceiveFieldNotesFromLastUsedAction;
        
        private Gtk.Action TransferCachesAction;
        
        private Gtk.Action ReceiveFieldNotesAction;
        
        private Gtk.Action AddGPSProfileAction;
        
        private Gtk.Action EditGPSProfileAction;
        
        private Gtk.Action DeleteGPSProfileAction;
        
        private Gtk.Action ViewAllInQLandkarteGTAction;
        
        private Gtk.Action ViewSelectedCacheInQLandkarteGTAction;
        
        private Gtk.Action ExternalToolsAction;
        
        private Gtk.Action ConfigureExternalToolsAction;
        
        private Gtk.Action LogFindAction;
        
        private Gtk.ToggleAction LogToFieldNotesFileAction;
        
        private Gtk.ToggleAction FullScreenAction;
        
        private Gtk.Action GrabImagesAction;
        
        private Gtk.ToggleAction MapPopupsAction;
        
        private Gtk.Action DatabaseCleanupAssistantAction;
        
        private Gtk.Action ReduceNumberOfLogsAction;
        
        private Gtk.Action GrabAllImagesAction;
        
        private Gtk.Action GrabImagesAction1;
        
        private Gtk.VBox mainWindowContents;
        
        private Gtk.MenuBar mainMenuBar;
        
        private Gtk.HPaned mainHPane;
        
        private ocmgtk.CacheListWidget cacheList;
        
        private Gtk.VPaned mainVPane;
        
        private ocmgtk.CacheInfoWidget ocmCacheInfo;
        
        private Gtk.VBox mapVBOX;
        
        private Gtk.HBox hbox14;
        
        private Gtk.Label spacerLabel;
        
        private Gtk.Button minButton;
        
        private Gtk.Image image250;
        
        private Gtk.Button mapDownButton;
        
        private Gtk.Image image38;
        
        private Gtk.Button restoreButton;
        
        private Gtk.Image image31;
        
        private Gtk.Button mapUpButton;
        
        private Gtk.Image image37;
        
        private ocmgtk.MapWidget ocmMapWidget;
        
        private Gtk.Statusbar mainStatusBar;
        
        private Gtk.Label LocationLabel;
        
        private Gtk.ProgressBar statusProgressBar;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.OCMMainWindow
            this.UIManager = new Gtk.UIManager();
            Gtk.ActionGroup w1 = new Gtk.ActionGroup("Default");
            this.FileAction = new Gtk.Action("FileAction", Mono.Unix.Catalog.GetString("_File"), null, null);
            this.FileAction.ShortLabel = Mono.Unix.Catalog.GetString("_File");
            w1.Add(this.FileAction, null);
            this.EditAction = new Gtk.Action("EditAction", Mono.Unix.Catalog.GetString("_Edit"), null, null);
            this.EditAction.ShortLabel = Mono.Unix.Catalog.GetString("_Edit");
            w1.Add(this.EditAction, null);
            this.ViewAction = new Gtk.Action("ViewAction", Mono.Unix.Catalog.GetString("_View"), null, null);
            this.ViewAction.ShortLabel = Mono.Unix.Catalog.GetString("_View");
            w1.Add(this.ViewAction, null);
            this.FilterAction = new Gtk.Action("FilterAction", Mono.Unix.Catalog.GetString("F_ilter"), null, null);
            this.FilterAction.ShortLabel = Mono.Unix.Catalog.GetString("F_ilter");
            w1.Add(this.FilterAction, null);
            this.GoAction = new Gtk.Action("GoAction", Mono.Unix.Catalog.GetString("_Go"), null, null);
            this.GoAction.ShortLabel = Mono.Unix.Catalog.GetString("_Go");
            w1.Add(this.GoAction, null);
            this.BookmarksAction = new Gtk.Action("BookmarksAction", Mono.Unix.Catalog.GetString("_Bookmarks"), null, null);
            this.BookmarksAction.ShortLabel = Mono.Unix.Catalog.GetString("_Bookmarks");
            w1.Add(this.BookmarksAction, null);
            this.CacheAction = new Gtk.Action("CacheAction", Mono.Unix.Catalog.GetString("_Cache"), null, null);
            this.CacheAction.ShortLabel = Mono.Unix.Catalog.GetString("_Cache");
            w1.Add(this.CacheAction, null);
            this.WebAction = new Gtk.Action("WebAction", Mono.Unix.Catalog.GetString("_Web"), null, null);
            this.WebAction.ShortLabel = Mono.Unix.Catalog.GetString("_Web");
            w1.Add(this.WebAction, null);
            this.GPSAction = new Gtk.Action("GPSAction", Mono.Unix.Catalog.GetString("G_PS"), null, null);
            this.GPSAction.ShortLabel = Mono.Unix.Catalog.GetString("G_PS");
            w1.Add(this.GPSAction, null);
            this.ToolsAction = new Gtk.Action("ToolsAction", Mono.Unix.Catalog.GetString("_Tools"), null, null);
            this.ToolsAction.ShortLabel = Mono.Unix.Catalog.GetString("_Tools");
            w1.Add(this.ToolsAction, null);
            this.HelpAction = new Gtk.Action("HelpAction", Mono.Unix.Catalog.GetString("_Help"), null, null);
            this.HelpAction.ShortLabel = Mono.Unix.Catalog.GetString("_Help");
            w1.Add(this.HelpAction, null);
            this.NewAction = new Gtk.Action("NewAction", Mono.Unix.Catalog.GetString("_New"), null, null);
            this.NewAction.ShortLabel = Mono.Unix.Catalog.GetString("_New");
            w1.Add(this.NewAction, null);
            this.openAction = new Gtk.Action("openAction", Mono.Unix.Catalog.GetString("_Open Database..."), null, "gtk-open");
            this.openAction.ShortLabel = Mono.Unix.Catalog.GetString("_Open Database...");
            w1.Add(this.openAction, null);
            this.CompactDatabaseAction = new Gtk.Action("CompactDatabaseAction", Mono.Unix.Catalog.GetString("_Compact Database"), null, null);
            this.CompactDatabaseAction.ShortLabel = Mono.Unix.Catalog.GetString("_Compact Database");
            w1.Add(this.CompactDatabaseAction, null);
            this.quitAction = new Gtk.Action("quitAction", Mono.Unix.Catalog.GetString("_Quit"), null, "gtk-quit");
            this.quitAction.ShortLabel = Mono.Unix.Catalog.GetString("_Quit");
            w1.Add(this.quitAction, null);
            this.NewDatabaseAction = new Gtk.Action("NewDatabaseAction", Mono.Unix.Catalog.GetString("_New Database..."), null, null);
            this.NewDatabaseAction.ShortLabel = Mono.Unix.Catalog.GetString("_New Database...");
            w1.Add(this.NewDatabaseAction, "<Control><Mod2>n");
            this.NewCacheAction = new Gtk.Action("NewCacheAction", Mono.Unix.Catalog.GetString("New _Cache..."), null, null);
            this.NewCacheAction.ShortLabel = Mono.Unix.Catalog.GetString("New _Cache...");
            w1.Add(this.NewCacheAction, null);
            this.ShowNearbyCachesAction = new Gtk.ToggleAction("ShowNearbyCachesAction", Mono.Unix.Catalog.GetString("_Show Nearby Caches"), null, null);
            this.ShowNearbyCachesAction.Active = true;
            this.ShowNearbyCachesAction.ShortLabel = Mono.Unix.Catalog.GetString("_Show Nearby Caches");
            w1.Add(this.ShowNearbyCachesAction, null);
            this.ChildWaypointsAction = new Gtk.Action("ChildWaypointsAction", Mono.Unix.Catalog.GetString("_Child Waypoints"), null, null);
            this.ChildWaypointsAction.ShortLabel = Mono.Unix.Catalog.GetString("_Child Waypoints");
            w1.Add(this.ChildWaypointsAction, null);
            this.FieldNotesAction = new Gtk.Action("FieldNotesAction", Mono.Unix.Catalog.GetString("_Field Notes..."), null, null);
            this.FieldNotesAction.ShortLabel = Mono.Unix.Catalog.GetString("_Field Notes...");
            w1.Add(this.FieldNotesAction, null);
            this.SelectedCacheOnlyAction = new Gtk.RadioAction("SelectedCacheOnlyAction", Mono.Unix.Catalog.GetString("Selected Cache Only"), null, null, 0);
            this.SelectedCacheOnlyAction.Group = new GLib.SList(System.IntPtr.Zero);
            this.SelectedCacheOnlyAction.ShortLabel = Mono.Unix.Catalog.GetString("Selected Cache Only");
            w1.Add(this.SelectedCacheOnlyAction, null);
            this.AllWaypointsAction = new Gtk.RadioAction("AllWaypointsAction", Mono.Unix.Catalog.GetString("All Waypoints"), null, null, 0);
            this.AllWaypointsAction.Group = this.SelectedCacheOnlyAction.Group;
            this.AllWaypointsAction.ShortLabel = Mono.Unix.Catalog.GetString("All Waypoints");
            w1.Add(this.AllWaypointsAction, null);
            this.printAction = new Gtk.Action("printAction", Mono.Unix.Catalog.GetString("_Print"), null, "gtk-print");
            this.printAction.ShortLabel = Mono.Unix.Catalog.GetString("_Print");
            w1.Add(this.printAction, "<Control><Mod2>p");
            this.LocationsAction = new Gtk.Action("LocationsAction", Mono.Unix.Catalog.GetString("_Locations"), null, null);
            this.LocationsAction.ShortLabel = Mono.Unix.Catalog.GetString("_Locations");
            w1.Add(this.LocationsAction, null);
            this.AddLocationAction = new Gtk.Action("AddLocationAction", Mono.Unix.Catalog.GetString("_Add Location..."), null, null);
            this.AddLocationAction.ShortLabel = Mono.Unix.Catalog.GetString("_Add Location...");
            w1.Add(this.AddLocationAction, null);
            this.DeleteLocationAction = new Gtk.Action("DeleteLocationAction", Mono.Unix.Catalog.GetString("_Delete Location..."), null, null);
            this.DeleteLocationAction.ShortLabel = Mono.Unix.Catalog.GetString("_Manage Locations...");
            w1.Add(this.DeleteLocationAction, null);
            this.PanToCentreAction = new Gtk.Action("PanToCentreAction", Mono.Unix.Catalog.GetString("_Pan to Centre"), null, null);
            this.PanToCentreAction.ShortLabel = Mono.Unix.Catalog.GetString("_Pan Map to Centre");
            w1.Add(this.PanToCentreAction, "<Shift><Alt><Mod2>Home");
            this.PanToSelectedCacheAction = new Gtk.Action("PanToSelectedCacheAction", Mono.Unix.Catalog.GetString("Pan to _Selected Cache"), null, null);
            this.PanToSelectedCacheAction.ShortLabel = Mono.Unix.Catalog.GetString("Pan Map to _Selected Cache");
            w1.Add(this.PanToSelectedCacheAction, null);
            this.ZoomToSelectedCacheAction = new Gtk.Action("ZoomToSelectedCacheAction", Mono.Unix.Catalog.GetString("_Zoom to Selected Cache"), null, null);
            this.ZoomToSelectedCacheAction.ShortLabel = Mono.Unix.Catalog.GetString("_Zoom Map to Selected Cache");
            w1.Add(this.ZoomToSelectedCacheAction, null);
            this.AdvancedFiltersAction = new Gtk.Action("AdvancedFiltersAction", Mono.Unix.Catalog.GetString("_Advanced Filters..."), null, null);
            this.AdvancedFiltersAction.ShortLabel = Mono.Unix.Catalog.GetString("_Advanced Filters...");
            w1.Add(this.AdvancedFiltersAction, "<Control><Mod2>f");
            this.CombinationFilterAction = new Gtk.Action("CombinationFilterAction", Mono.Unix.Catalog.GetString("C_ombination Filter..."), null, null);
            this.CombinationFilterAction.ShortLabel = Mono.Unix.Catalog.GetString("C_ombination Filter...");
            w1.Add(this.CombinationFilterAction, "<Control><Alt><Mod2>c");
            this.ClearAdvancedFiltersAction = new Gtk.Action("ClearAdvancedFiltersAction", Mono.Unix.Catalog.GetString("_Clear Advanced Filters..."), null, null);
            this.ClearAdvancedFiltersAction.Sensitive = false;
            this.ClearAdvancedFiltersAction.ShortLabel = Mono.Unix.Catalog.GetString("_Clear Advanced Filters...");
            w1.Add(this.ClearAdvancedFiltersAction, null);
            this.ClearComboFilterAction = new Gtk.Action("ClearComboFilterAction", Mono.Unix.Catalog.GetString("C_lear Combo Filter"), null, null);
            this.ClearComboFilterAction.Sensitive = false;
            this.ClearComboFilterAction.ShortLabel = Mono.Unix.Catalog.GetString("C_lear Combo Filter");
            w1.Add(this.ClearComboFilterAction, null);
            this.ClearAllFiltersAction = new Gtk.Action("ClearAllFiltersAction", Mono.Unix.Catalog.GetString("Clear _All Filters"), null, null);
            this.ClearAllFiltersAction.Sensitive = false;
            this.ClearAllFiltersAction.ShortLabel = Mono.Unix.Catalog.GetString("Clear _All Filters");
            w1.Add(this.ClearAllFiltersAction, null);
            this.QuickFilterAction = new Gtk.Action("QuickFilterAction", Mono.Unix.Catalog.GetString("_Quick Filter"), null, null);
            this.QuickFilterAction.ShortLabel = Mono.Unix.Catalog.GetString("_Quick Filter");
            w1.Add(this.QuickFilterAction, null);
            this.OCMWikiAction = new Gtk.Action("OCMWikiAction", Mono.Unix.Catalog.GetString("_OCM Wiki..."), null, null);
            this.OCMWikiAction.ShortLabel = Mono.Unix.Catalog.GetString("_OCM Wiki...");
            w1.Add(this.OCMWikiAction, null);
            this.OCMForumsAction = new Gtk.Action("OCMForumsAction", Mono.Unix.Catalog.GetString("OCM _Forums..."), null, null);
            this.OCMForumsAction.ShortLabel = Mono.Unix.Catalog.GetString("OCM _Forums...");
            w1.Add(this.OCMForumsAction, null);
            this.AboutAction = new Gtk.Action("AboutAction", Mono.Unix.Catalog.GetString("_About"), null, null);
            this.AboutAction.ShortLabel = Mono.Unix.Catalog.GetString("_About");
            w1.Add(this.AboutAction, null);
            this.ChangeHistoryAction = new Gtk.Action("ChangeHistoryAction", Mono.Unix.Catalog.GetString("_Change History..."), null, null);
            this.ChangeHistoryAction.ShortLabel = Mono.Unix.Catalog.GetString("_Change History...");
            w1.Add(this.ChangeHistoryAction, null);
            this.CheckForUpdatesAction = new Gtk.Action("CheckForUpdatesAction", Mono.Unix.Catalog.GetString("Check For _Updates..."), null, null);
            this.CheckForUpdatesAction.ShortLabel = Mono.Unix.Catalog.GetString("Check For _Updates...");
            w1.Add(this.CheckForUpdatesAction, null);
            this.OCMHomePageAction = new Gtk.Action("OCMHomePageAction", Mono.Unix.Catalog.GetString("_OCM Home Page..."), null, null);
            this.OCMHomePageAction.ShortLabel = Mono.Unix.Catalog.GetString("_OCM Home Page...");
            w1.Add(this.OCMHomePageAction, null);
            this.GeocachingComAction = new Gtk.Action("GeocachingComAction", Mono.Unix.Catalog.GetString("_Geocaching.com"), null, null);
            this.GeocachingComAction.ShortLabel = Mono.Unix.Catalog.GetString("_Geocaching.com");
            w1.Add(this.GeocachingComAction, null);
            this.TerracachingComAction = new Gtk.Action("TerracachingComAction", Mono.Unix.Catalog.GetString("_Terracaching.com"), null, null);
            this.TerracachingComAction.ShortLabel = Mono.Unix.Catalog.GetString("_Terracaching.com");
            w1.Add(this.TerracachingComAction, null);
            this.OpencachingAction = new Gtk.Action("OpencachingAction", Mono.Unix.Catalog.GetString("O_pencaching"), null, null);
            this.OpencachingAction.ShortLabel = Mono.Unix.Catalog.GetString("O_pencaching");
            w1.Add(this.OpencachingAction, null);
            this.GPSBabelHomePageAction = new Gtk.Action("GPSBabelHomePageAction", Mono.Unix.Catalog.GetString("G_PSBabel Home Page..."), null, null);
            this.GPSBabelHomePageAction.ShortLabel = Mono.Unix.Catalog.GetString("G_PSBabel Home Page...");
            w1.Add(this.GPSBabelHomePageAction, null);
            this.GPSDHomePageAction = new Gtk.Action("GPSDHomePageAction", Mono.Unix.Catalog.GetString("GPS_D Home Page..."), null, null);
            this.GPSDHomePageAction.ShortLabel = Mono.Unix.Catalog.GetString("GPS_D Home Page...");
            w1.Add(this.GPSDHomePageAction, null);
            this.HomePageAction = new Gtk.Action("HomePageAction", Mono.Unix.Catalog.GetString("_Home Page..."), null, null);
            this.HomePageAction.ShortLabel = Mono.Unix.Catalog.GetString("_Home Page...");
            w1.Add(this.HomePageAction, null);
            this.ViewMyProfileAction = new Gtk.Action("ViewMyProfileAction", Mono.Unix.Catalog.GetString("_View My Profile..."), null, null);
            this.ViewMyProfileAction.ShortLabel = Mono.Unix.Catalog.GetString("_View My Profile...");
            w1.Add(this.ViewMyProfileAction, null);
            this.MyAccountDetailsAction = new Gtk.Action("MyAccountDetailsAction", Mono.Unix.Catalog.GetString("_My Account Details..."), null, null);
            this.MyAccountDetailsAction.ShortLabel = Mono.Unix.Catalog.GetString("_My Account Details...");
            w1.Add(this.MyAccountDetailsAction, null);
            this.CreatePocketQueriesAction = new Gtk.Action("CreatePocketQueriesAction", Mono.Unix.Catalog.GetString("_Create Pocket Queries..."), null, null);
            this.CreatePocketQueriesAction.ShortLabel = Mono.Unix.Catalog.GetString("_Create Pocket Queries...");
            w1.Add(this.CreatePocketQueriesAction, null);
            this.StatisticsAction = new Gtk.Action("StatisticsAction", Mono.Unix.Catalog.GetString("_Statistics..."), null, null);
            this.StatisticsAction.ShortLabel = Mono.Unix.Catalog.GetString("_Statistics...");
            w1.Add(this.StatisticsAction, null);
            this.FindACacheAction = new Gtk.Action("FindACacheAction", Mono.Unix.Catalog.GetString("_Find a Cache..."), null, null);
            this.FindACacheAction.ShortLabel = Mono.Unix.Catalog.GetString("_Find a Cache...");
            w1.Add(this.FindACacheAction, null);
            this.TCHomePageAction = new Gtk.Action("TCHomePageAction", Mono.Unix.Catalog.GetString("_Home Page..."), null, null);
            this.TCHomePageAction.ShortLabel = Mono.Unix.Catalog.GetString("_Home Page...");
            w1.Add(this.TCHomePageAction, null);
            this.ToDoListAction = new Gtk.Action("ToDoListAction", Mono.Unix.Catalog.GetString("To _Do List"), null, null);
            this.ToDoListAction.ShortLabel = Mono.Unix.Catalog.GetString("To _Do List");
            w1.Add(this.ToDoListAction, null);
            this.TraditionalAction = new Gtk.Action("TraditionalAction", Mono.Unix.Catalog.GetString("_Traditional..."), null, null);
            this.TraditionalAction.ShortLabel = Mono.Unix.Catalog.GetString("_Traditional...");
            w1.Add(this.TraditionalAction, null);
            this.LocationlessAction = new Gtk.Action("LocationlessAction", Mono.Unix.Catalog.GetString("_Locationless..."), null, null);
            this.LocationlessAction.ShortLabel = Mono.Unix.Catalog.GetString("_Locationless...");
            w1.Add(this.LocationlessAction, null);
            this.ListOfCountrySitesAction = new Gtk.Action("ListOfCountrySitesAction", Mono.Unix.Catalog.GetString("_List Of Country Sites"), null, null);
            this.ListOfCountrySitesAction.ShortLabel = Mono.Unix.Catalog.GetString("_List Of Country Sites");
            w1.Add(this.ListOfCountrySitesAction, null);
            this.NavicacheComAction = new Gtk.Action("NavicacheComAction", Mono.Unix.Catalog.GetString("_Navicache.com"), null, null);
            this.NavicacheComAction.ShortLabel = Mono.Unix.Catalog.GetString("_Navicache.com");
            w1.Add(this.NavicacheComAction, null);
            this.NVHomePageAction = new Gtk.Action("NVHomePageAction", Mono.Unix.Catalog.GetString("_Home Page..."), null, null);
            this.NVHomePageAction.ShortLabel = Mono.Unix.Catalog.GetString("_Home Page...");
            w1.Add(this.NVHomePageAction, null);
            this.MyNavicacheAction = new Gtk.Action("MyNavicacheAction", Mono.Unix.Catalog.GetString("_My Navicache..."), null, null);
            this.MyNavicacheAction.ShortLabel = Mono.Unix.Catalog.GetString("_My Navicache...");
            w1.Add(this.MyNavicacheAction, null);
            this.MarkAction = new Gtk.Action("MarkAction", Mono.Unix.Catalog.GetString("_Mark"), null, null);
            this.MarkAction.ShortLabel = Mono.Unix.Catalog.GetString("_Mark");
            w1.Add(this.MarkAction, null);
            this.AddChildWaypointAction = new Gtk.Action("AddChildWaypointAction", Mono.Unix.Catalog.GetString("Add Child _Waypoint..."), null, null);
            this.AddChildWaypointAction.ShortLabel = Mono.Unix.Catalog.GetString("Add Child _Waypoint...");
            w1.Add(this.AddChildWaypointAction, "<Control><Mod2>w");
            this.CorrectedCoordinatesAction = new Gtk.Action("CorrectedCoordinatesAction", Mono.Unix.Catalog.GetString("_Corrected Coordinates..."), null, null);
            this.CorrectedCoordinatesAction.ShortLabel = Mono.Unix.Catalog.GetString("_Corrected Coordinates...");
            w1.Add(this.CorrectedCoordinatesAction, "<Control><Mod2>r");
            this.ViewOnlineAction = new Gtk.Action("ViewOnlineAction", Mono.Unix.Catalog.GetString("_View Online..."), null, null);
            this.ViewOnlineAction.ShortLabel = Mono.Unix.Catalog.GetString("_View Online...");
            w1.Add(this.ViewOnlineAction, null);
            this.SetSelectedCacheAsCentreAction = new Gtk.Action("SetSelectedCacheAsCentreAction", Mono.Unix.Catalog.GetString("_Set Selected Cache As Centre"), null, null);
            this.SetSelectedCacheAsCentreAction.ShortLabel = Mono.Unix.Catalog.GetString("_Set Selected Cache As Centre");
            w1.Add(this.SetSelectedCacheAsCentreAction, null);
            this.ModifyCacheAction = new Gtk.Action("ModifyCacheAction", Mono.Unix.Catalog.GetString("M_odify Cache"), null, null);
            this.ModifyCacheAction.ShortLabel = Mono.Unix.Catalog.GetString("M_odify Cache");
            w1.Add(this.ModifyCacheAction, "<Control><Mod2>m");
            this.MarkFoundAction = new Gtk.Action("MarkFoundAction", Mono.Unix.Catalog.GetString("Mark _Found"), null, null);
            this.MarkFoundAction.ShortLabel = Mono.Unix.Catalog.GetString("Mark _Found");
            w1.Add(this.MarkFoundAction, null);
            this.MarkFirstToFindAction = new Gtk.Action("MarkFirstToFindAction", Mono.Unix.Catalog.GetString("Mark F_irst To Find"), null, null);
            this.MarkFirstToFindAction.ShortLabel = Mono.Unix.Catalog.GetString("Mark F_irst To Find");
            w1.Add(this.MarkFirstToFindAction, null);
            this.MarkDidNotFindAction = new Gtk.Action("MarkDidNotFindAction", Mono.Unix.Catalog.GetString("Mark Did _Not Find"), null, null);
            this.MarkDidNotFindAction.ShortLabel = Mono.Unix.Catalog.GetString("Mark Did _Not Find");
            w1.Add(this.MarkDidNotFindAction, null);
            this.MarkUnfoundAction = new Gtk.Action("MarkUnfoundAction", Mono.Unix.Catalog.GetString("Mark _Unfound"), null, null);
            this.MarkUnfoundAction.ShortLabel = Mono.Unix.Catalog.GetString("Mark _Unfound");
            w1.Add(this.MarkUnfoundAction, null);
            this.MarkDisabledAction = new Gtk.Action("MarkDisabledAction", Mono.Unix.Catalog.GetString("Mark _Disabled"), null, null);
            this.MarkDisabledAction.ShortLabel = Mono.Unix.Catalog.GetString("Mark _Disabled");
            w1.Add(this.MarkDisabledAction, null);
            this.MarkArchivedAction = new Gtk.Action("MarkArchivedAction", Mono.Unix.Catalog.GetString("Mark _Archived"), null, null);
            this.MarkArchivedAction.ShortLabel = Mono.Unix.Catalog.GetString("Mark _Archived");
            w1.Add(this.MarkArchivedAction, null);
            this.MarkAvailableAction = new Gtk.Action("MarkAvailableAction", Mono.Unix.Catalog.GetString("Mark A_vailable"), null, null);
            this.MarkAvailableAction.ShortLabel = Mono.Unix.Catalog.GetString("Mark A_vailable");
            w1.Add(this.MarkAvailableAction, null);
            this.BookmarkListAction = new Gtk.Action("BookmarkListAction", Mono.Unix.Catalog.GetString("Bookmark _List"), null, null);
            this.BookmarkListAction.ShortLabel = Mono.Unix.Catalog.GetString("Bookmark _List");
            w1.Add(this.BookmarkListAction, null);
            this.AddAllUnfilteredCachesToAction = new Gtk.Action("AddAllUnfilteredCachesToAction", Mono.Unix.Catalog.GetString("_Add All Unfiltered Caches to"), null, null);
            this.AddAllUnfilteredCachesToAction.ShortLabel = Mono.Unix.Catalog.GetString("_Add All Unfiltered Caches to");
            w1.Add(this.AddAllUnfilteredCachesToAction, null);
            this.AddSelectedCacheToAction = new Gtk.Action("AddSelectedCacheToAction", Mono.Unix.Catalog.GetString("Add _Selected Cache to"), null, null);
            this.AddSelectedCacheToAction.Sensitive = false;
            this.AddSelectedCacheToAction.ShortLabel = Mono.Unix.Catalog.GetString("Add _Selected Cache to");
            w1.Add(this.AddSelectedCacheToAction, null);
            this.RemoveSelectedCacheFromBookmarkListAction = new Gtk.Action("RemoveSelectedCacheFromBookmarkListAction", Mono.Unix.Catalog.GetString("_Remove Selected Cache from Bookmark List"), null, null);
            this.RemoveSelectedCacheFromBookmarkListAction.Sensitive = false;
            this.RemoveSelectedCacheFromBookmarkListAction.ShortLabel = Mono.Unix.Catalog.GetString("_Remove Selected Cache from Bookmark List");
            w1.Add(this.RemoveSelectedCacheFromBookmarkListAction, null);
            this.CreateBookmarkListAction = new Gtk.Action("CreateBookmarkListAction", Mono.Unix.Catalog.GetString("_Create Bookmark List..."), null, null);
            this.CreateBookmarkListAction.ShortLabel = Mono.Unix.Catalog.GetString("_Create Bookmark List");
            w1.Add(this.CreateBookmarkListAction, null);
            this.DeleteBookmarkListAction = new Gtk.Action("DeleteBookmarkListAction", Mono.Unix.Catalog.GetString("_Delete Bookmark List..."), null, null);
            this.DeleteBookmarkListAction.ShortLabel = Mono.Unix.Catalog.GetString("_Manage Bookmark Lists...");
            w1.Add(this.DeleteBookmarkListAction, null);
            this.ZoomToCentreAction = new Gtk.Action("ZoomToCentreAction", Mono.Unix.Catalog.GetString("Zoom to _Centre"), null, null);
            this.ZoomToCentreAction.ShortLabel = Mono.Unix.Catalog.GetString("Zoom to _Centre");
            w1.Add(this.ZoomToCentreAction, "<Alt><Mod2>Home");
            this.ImportGPXLocZipAction = new Gtk.Action("ImportGPXLocZipAction", Mono.Unix.Catalog.GetString("_Import GPX/Loc/Zip..."), null, null);
            this.ImportGPXLocZipAction.ShortLabel = Mono.Unix.Catalog.GetString("_Import GPX/Loc/Zip...");
            w1.Add(this.ImportGPXLocZipAction, null);
            this.ImportDirectoryAction = new Gtk.Action("ImportDirectoryAction", Mono.Unix.Catalog.GetString("_Import Directory..."), null, null);
            this.ImportDirectoryAction.ShortLabel = Mono.Unix.Catalog.GetString("_Import Directory...");
            w1.Add(this.ImportDirectoryAction, null);
            this.SaveCurrentViewAsQuickFilterAction = new Gtk.Action("SaveCurrentViewAsQuickFilterAction", Mono.Unix.Catalog.GetString("_Save Current View as QuickFilter..."), null, null);
            this.SaveCurrentViewAsQuickFilterAction.ShortLabel = Mono.Unix.Catalog.GetString("_Save Current View as QuickFilter...");
            w1.Add(this.SaveCurrentViewAsQuickFilterAction, null);
            this.DeleteQuickFilterAction = new Gtk.Action("DeleteQuickFilterAction", Mono.Unix.Catalog.GetString("_Delete Quick Filter..."), null, null);
            this.DeleteQuickFilterAction.ShortLabel = Mono.Unix.Catalog.GetString("_Delete Quick Filter...");
            w1.Add(this.DeleteQuickFilterAction, null);
            this.ExportAction = new Gtk.Action("ExportAction", Mono.Unix.Catalog.GetString("_Export"), null, null);
            this.ExportAction.ShortLabel = Mono.Unix.Catalog.GetString("_Export");
            w1.Add(this.ExportAction, null);
            this.ExportGPXAction = new Gtk.Action("ExportGPXAction", Mono.Unix.Catalog.GetString("_Export GPX..."), null, null);
            this.ExportGPXAction.ShortLabel = Mono.Unix.Catalog.GetString("_Export GPX...");
            w1.Add(this.ExportGPXAction, "<Control><Mod2>s");
            this.ExportFindsGPXAction = new Gtk.Action("ExportFindsGPXAction", Mono.Unix.Catalog.GetString("Export _Finds GPX..."), null, null);
            this.ExportFindsGPXAction.ShortLabel = Mono.Unix.Catalog.GetString("Export _Finds GPX...");
            w1.Add(this.ExportFindsGPXAction, null);
            this.ExportGarminPOIFileAction = new Gtk.Action("ExportGarminPOIFileAction", Mono.Unix.Catalog.GetString("Export _Garmin POI File..."), null, null);
            this.ExportGarminPOIFileAction.ShortLabel = Mono.Unix.Catalog.GetString("Export _Garmin POI File...");
            w1.Add(this.ExportGarminPOIFileAction, null);
            this.CopyToAction = new Gtk.Action("CopyToAction", Mono.Unix.Catalog.GetString("_Copy To..."), null, null);
            this.CopyToAction.ShortLabel = Mono.Unix.Catalog.GetString("_Copy To...");
            w1.Add(this.CopyToAction, null);
            this.MoveToAction = new Gtk.Action("MoveToAction", Mono.Unix.Catalog.GetString("_Move To..."), null, null);
            this.MoveToAction.ShortLabel = Mono.Unix.Catalog.GetString("_Move To...");
            w1.Add(this.MoveToAction, null);
            this.DeleteAction = new Gtk.Action("DeleteAction", Mono.Unix.Catalog.GetString("_Delete..."), null, null);
            this.DeleteAction.ShortLabel = Mono.Unix.Catalog.GetString("_Delete...");
            w1.Add(this.DeleteAction, null);
            this.DeleteAllAction = new Gtk.Action("DeleteAllAction", Mono.Unix.Catalog.GetString("Delete _All..."), null, null);
            this.DeleteAllAction.ShortLabel = Mono.Unix.Catalog.GetString("Delete _All...");
            w1.Add(this.DeleteAllAction, null);
            this.DeselectAction = new Gtk.Action("DeselectAction", Mono.Unix.Catalog.GetString("De_select"), null, null);
            this.DeselectAction.ShortLabel = Mono.Unix.Catalog.GetString("De_select");
            w1.Add(this.DeselectAction, null);
            this.PreferencesAction = new Gtk.Action("PreferencesAction", Mono.Unix.Catalog.GetString("_Preferences..."), null, null);
            this.PreferencesAction.ShortLabel = Mono.Unix.Catalog.GetString("_Preferences...");
            w1.Add(this.PreferencesAction, null);
            this.TransferCachesToLastUsedAction = new Gtk.Action("TransferCachesToLastUsedAction", Mono.Unix.Catalog.GetString("Transfer _Caches to Last Used..."), null, null);
            this.TransferCachesToLastUsedAction.Sensitive = false;
            this.TransferCachesToLastUsedAction.ShortLabel = Mono.Unix.Catalog.GetString("Transfer _Caches to Last Used...");
            w1.Add(this.TransferCachesToLastUsedAction, "<Control><Mod2>t");
            this.ReceiveFieldNotesFromLastUsedAction = new Gtk.Action("ReceiveFieldNotesFromLastUsedAction", Mono.Unix.Catalog.GetString("Receive _Field Notes from Last Used..."), null, null);
            this.ReceiveFieldNotesFromLastUsedAction.Sensitive = false;
            this.ReceiveFieldNotesFromLastUsedAction.ShortLabel = Mono.Unix.Catalog.GetString("Receive _Field Notes from Last Used...");
            w1.Add(this.ReceiveFieldNotesFromLastUsedAction, "<Control><Alt><Mod2>r");
            this.TransferCachesAction = new Gtk.Action("TransferCachesAction", Mono.Unix.Catalog.GetString("_Transfer Caches..."), null, null);
            this.TransferCachesAction.ShortLabel = Mono.Unix.Catalog.GetString("_Transfer Caches...");
            w1.Add(this.TransferCachesAction, null);
            this.ReceiveFieldNotesAction = new Gtk.Action("ReceiveFieldNotesAction", Mono.Unix.Catalog.GetString("_Receive Field Notes..."), null, null);
            this.ReceiveFieldNotesAction.ShortLabel = Mono.Unix.Catalog.GetString("_Receive Field Notes...");
            w1.Add(this.ReceiveFieldNotesAction, null);
            this.AddGPSProfileAction = new Gtk.Action("AddGPSProfileAction", Mono.Unix.Catalog.GetString("_Add GPS Profile..."), null, null);
            this.AddGPSProfileAction.ShortLabel = Mono.Unix.Catalog.GetString("_Add GPS Profile...");
            w1.Add(this.AddGPSProfileAction, null);
            this.EditGPSProfileAction = new Gtk.Action("EditGPSProfileAction", Mono.Unix.Catalog.GetString("_Edit GPS Profile..."), null, null);
            this.EditGPSProfileAction.ShortLabel = Mono.Unix.Catalog.GetString("_Edit GPS Profile...");
            w1.Add(this.EditGPSProfileAction, null);
            this.DeleteGPSProfileAction = new Gtk.Action("DeleteGPSProfileAction", Mono.Unix.Catalog.GetString("_Delete GPS Profile..."), null, null);
            this.DeleteGPSProfileAction.ShortLabel = Mono.Unix.Catalog.GetString("_Delete GPS Profile...");
            w1.Add(this.DeleteGPSProfileAction, null);
            this.ViewAllInQLandkarteGTAction = new Gtk.Action("ViewAllInQLandkarteGTAction", Mono.Unix.Catalog.GetString("_View All in QLandkarte GT..."), null, null);
            this.ViewAllInQLandkarteGTAction.ShortLabel = Mono.Unix.Catalog.GetString("_View All in QLandkarte GT...");
            w1.Add(this.ViewAllInQLandkarteGTAction, null);
            this.ViewSelectedCacheInQLandkarteGTAction = new Gtk.Action("ViewSelectedCacheInQLandkarteGTAction", Mono.Unix.Catalog.GetString("View _Selected Cache in QLandkarte GT..."), null, null);
            this.ViewSelectedCacheInQLandkarteGTAction.ShortLabel = Mono.Unix.Catalog.GetString("View _Selected Cache in QLandkarte GT...");
            w1.Add(this.ViewSelectedCacheInQLandkarteGTAction, null);
            this.ExternalToolsAction = new Gtk.Action("ExternalToolsAction", Mono.Unix.Catalog.GetString("_External Tools"), null, null);
            this.ExternalToolsAction.ShortLabel = Mono.Unix.Catalog.GetString("_External Tools");
            w1.Add(this.ExternalToolsAction, null);
            this.ConfigureExternalToolsAction = new Gtk.Action("ConfigureExternalToolsAction", Mono.Unix.Catalog.GetString("_Configure External Tools"), null, null);
            this.ConfigureExternalToolsAction.ShortLabel = Mono.Unix.Catalog.GetString("_Configure External Tools");
            w1.Add(this.ConfigureExternalToolsAction, null);
            this.LogFindAction = new Gtk.Action("LogFindAction", Mono.Unix.Catalog.GetString("_Log Find..."), null, null);
            this.LogFindAction.ShortLabel = Mono.Unix.Catalog.GetString("_Log Find...");
            w1.Add(this.LogFindAction, null);
            this.LogToFieldNotesFileAction = new Gtk.ToggleAction("LogToFieldNotesFileAction", Mono.Unix.Catalog.GetString("Log to _Field Notes File"), null, null);
            this.LogToFieldNotesFileAction.ShortLabel = Mono.Unix.Catalog.GetString("Log to _Field Notes File");
            w1.Add(this.LogToFieldNotesFileAction, null);
            this.FullScreenAction = new Gtk.ToggleAction("FullScreenAction", Mono.Unix.Catalog.GetString("Full _Screen"), null, null);
            this.FullScreenAction.ShortLabel = Mono.Unix.Catalog.GetString("Full _Screen");
            w1.Add(this.FullScreenAction, "<Mod2>F11");
            this.GrabImagesAction = new Gtk.Action("GrabImagesAction", Mono.Unix.Catalog.GetString("_Grab Images..."), null, null);
            this.GrabImagesAction.ShortLabel = Mono.Unix.Catalog.GetString("_Grab Images...");
            w1.Add(this.GrabImagesAction, null);
            this.MapPopupsAction = new Gtk.ToggleAction("MapPopupsAction", Mono.Unix.Catalog.GetString("_Map Popups"), null, null);
            this.MapPopupsAction.Active = true;
            this.MapPopupsAction.ShortLabel = Mono.Unix.Catalog.GetString("_Map Popups");
            w1.Add(this.MapPopupsAction, null);
            this.DatabaseCleanupAssistantAction = new Gtk.Action("DatabaseCleanupAssistantAction", Mono.Unix.Catalog.GetString("Database Cleanup Assistant..."), null, null);
            this.DatabaseCleanupAssistantAction.ShortLabel = Mono.Unix.Catalog.GetString("Database Cleanup Assistant...");
            w1.Add(this.DatabaseCleanupAssistantAction, null);
            this.ReduceNumberOfLogsAction = new Gtk.Action("ReduceNumberOfLogsAction", Mono.Unix.Catalog.GetString("_Reduce Number of Logs..."), null, null);
            this.ReduceNumberOfLogsAction.ShortLabel = Mono.Unix.Catalog.GetString("_Reduce Number of Logs...");
            w1.Add(this.ReduceNumberOfLogsAction, null);
            this.GrabAllImagesAction = new Gtk.Action("GrabAllImagesAction", Mono.Unix.Catalog.GetString("Grab All Images..."), null, null);
            this.GrabAllImagesAction.ShortLabel = Mono.Unix.Catalog.GetString("Grab All Images...");
            w1.Add(this.GrabAllImagesAction, null);
            this.GrabImagesAction1 = new Gtk.Action("GrabImagesAction1", Mono.Unix.Catalog.GetString("Grab Images..."), null, null);
            this.GrabImagesAction1.ShortLabel = Mono.Unix.Catalog.GetString("Grab Images...");
            w1.Add(this.GrabImagesAction1, null);
            this.UIManager.InsertActionGroup(w1, 0);
            this.AddAccelGroup(this.UIManager.AccelGroup);
            this.Name = "ocmgtk.OCMMainWindow";
            this.Title = Mono.Unix.Catalog.GetString("OCM");
            this.Icon = Gdk.Pixbuf.LoadFromResource("ocmgtk.icons.scalable.OCMLogoSmall.svg");
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            // Container child ocmgtk.OCMMainWindow.Gtk.Container+ContainerChild
            this.mainWindowContents = new Gtk.VBox();
            this.mainWindowContents.Name = "mainWindowContents";
            this.mainWindowContents.Spacing = 6;
            // Container child mainWindowContents.Gtk.Box+BoxChild
            this.UIManager.AddUiFromString("<ui><menubar name='mainMenuBar'><menu name='FileAction' action='FileAction'><menu name='NewAction' action='NewAction'><menuitem name='NewDatabaseAction' action='NewDatabaseAction'/><menuitem name='NewCacheAction' action='NewCacheAction'/></menu><menuitem name='openAction' action='openAction'/><menuitem name='CompactDatabaseAction' action='CompactDatabaseAction'/><separator/><menuitem name='ImportGPXLocZipAction' action='ImportGPXLocZipAction'/><menuitem name='ImportDirectoryAction' action='ImportDirectoryAction'/><separator/><menu name='ExportAction' action='ExportAction'><menuitem name='ExportGPXAction' action='ExportGPXAction'/><menuitem name='ExportFindsGPXAction' action='ExportFindsGPXAction'/><menuitem name='ExportGarminPOIFileAction' action='ExportGarminPOIFileAction'/></menu><separator/><menuitem name='printAction' action='printAction'/><separator/><menuitem name='quitAction' action='quitAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='CopyToAction' action='CopyToAction'/><menuitem name='MoveToAction' action='MoveToAction'/><separator/><menuitem name='DeleteAction' action='DeleteAction'/><menuitem name='DeleteAllAction' action='DeleteAllAction'/><separator/><menuitem name='GrabImagesAction1' action='GrabImagesAction1'/><menuitem name='GrabAllImagesAction' action='GrabAllImagesAction'/><separator/><menuitem name='DeselectAction' action='DeselectAction'/><separator/><menuitem name='PreferencesAction' action='PreferencesAction'/></menu><menu name='ViewAction' action='ViewAction'><menuitem name='ShowNearbyCachesAction' action='ShowNearbyCachesAction'/><menu name='ChildWaypointsAction' action='ChildWaypointsAction'><menuitem name='SelectedCacheOnlyAction' action='SelectedCacheOnlyAction'/><menuitem name='AllWaypointsAction' action='AllWaypointsAction'/></menu><menuitem name='MapPopupsAction' action='MapPopupsAction'/><separator/><menuitem name='FieldNotesAction' action='FieldNotesAction'/><menuitem name='FullScreenAction' action='FullScreenAction'/></menu><menu name='FilterAction' action='FilterAction'><menuitem name='QuickFilterAction' action='QuickFilterAction'/><menuitem name='AdvancedFiltersAction' action='AdvancedFiltersAction'/><menuitem name='CombinationFilterAction' action='CombinationFilterAction'/><separator/><menuitem name='ClearAdvancedFiltersAction' action='ClearAdvancedFiltersAction'/><menuitem name='ClearComboFilterAction' action='ClearComboFilterAction'/><menuitem name='ClearAllFiltersAction' action='ClearAllFiltersAction'/><separator/><menuitem name='SaveCurrentViewAsQuickFilterAction' action='SaveCurrentViewAsQuickFilterAction'/><menuitem name='DeleteQuickFilterAction' action='DeleteQuickFilterAction'/></menu><menu name='GoAction' action='GoAction'><menu name='LocationsAction' action='LocationsAction'/><menuitem name='AddLocationAction' action='AddLocationAction'/><menuitem name='DeleteLocationAction' action='DeleteLocationAction'/><separator/><menuitem name='PanToCentreAction' action='PanToCentreAction'/><menuitem name='PanToSelectedCacheAction' action='PanToSelectedCacheAction'/><menuitem name='ZoomToCentreAction' action='ZoomToCentreAction'/><menuitem name='ZoomToSelectedCacheAction' action='ZoomToSelectedCacheAction'/></menu><menu name='BookmarksAction' action='BookmarksAction'><menu name='BookmarkListAction' action='BookmarkListAction'/><menu name='AddAllUnfilteredCachesToAction' action='AddAllUnfilteredCachesToAction'/><menuitem name='AddSelectedCacheToAction' action='AddSelectedCacheToAction'/><menuitem name='RemoveSelectedCacheFromBookmarkListAction' action='RemoveSelectedCacheFromBookmarkListAction'/><separator/><menuitem name='CreateBookmarkListAction' action='CreateBookmarkListAction'/><menuitem name='DeleteBookmarkListAction' action='DeleteBookmarkListAction'/></menu><menu name='CacheAction' action='CacheAction'><menuitem name='LogFindAction' action='LogFindAction'/><menuitem name='LogToFieldNotesFileAction' action='LogToFieldNotesFileAction'/><separator/><menu name='MarkAction' action='MarkAction'><menuitem name='MarkFoundAction' action='MarkFoundAction'/><menuitem name='MarkFirstToFindAction' action='MarkFirstToFindAction'/><menuitem name='MarkDidNotFindAction' action='MarkDidNotFindAction'/><menuitem name='MarkUnfoundAction' action='MarkUnfoundAction'/><menuitem name='MarkDisabledAction' action='MarkDisabledAction'/><menuitem name='MarkArchivedAction' action='MarkArchivedAction'/><menuitem name='MarkAvailableAction' action='MarkAvailableAction'/></menu><menuitem name='AddChildWaypointAction' action='AddChildWaypointAction'/><menuitem name='CorrectedCoordinatesAction' action='CorrectedCoordinatesAction'/><separator/><menuitem name='ViewOnlineAction' action='ViewOnlineAction'/><separator/><menuitem name='SetSelectedCacheAsCentreAction' action='SetSelectedCacheAsCentreAction'/><menuitem name='ModifyCacheAction' action='ModifyCacheAction'/><menuitem name='ReduceNumberOfLogsAction' action='ReduceNumberOfLogsAction'/></menu><menu name='WebAction' action='WebAction'><menuitem name='OCMHomePageAction' action='OCMHomePageAction'/><separator/><menu name='GeocachingComAction' action='GeocachingComAction'><menuitem name='HomePageAction' action='HomePageAction'/><menuitem name='ViewMyProfileAction' action='ViewMyProfileAction'/><menuitem name='MyAccountDetailsAction' action='MyAccountDetailsAction'/><menuitem name='CreatePocketQueriesAction' action='CreatePocketQueriesAction'/><menuitem name='StatisticsAction' action='StatisticsAction'/><separator/><menuitem name='FindACacheAction' action='FindACacheAction'/></menu><menu name='TerracachingComAction' action='TerracachingComAction'><menuitem name='TCHomePageAction' action='TCHomePageAction'/><menu name='ToDoListAction' action='ToDoListAction'><menuitem name='TraditionalAction' action='TraditionalAction'/><menuitem name='LocationlessAction' action='LocationlessAction'/></menu></menu><menu name='NavicacheComAction' action='NavicacheComAction'><menuitem name='NVHomePageAction' action='NVHomePageAction'/><menuitem name='MyNavicacheAction' action='MyNavicacheAction'/></menu><menu name='OpencachingAction' action='OpencachingAction'><menuitem name='ListOfCountrySitesAction' action='ListOfCountrySitesAction'/></menu><menuitem name='GPSBabelHomePageAction' action='GPSBabelHomePageAction'/><menuitem name='GPSDHomePageAction' action='GPSDHomePageAction'/></menu><menu name='GPSAction' action='GPSAction'><menuitem name='TransferCachesToLastUsedAction' action='TransferCachesToLastUsedAction'/><menuitem name='ReceiveFieldNotesFromLastUsedAction' action='ReceiveFieldNotesFromLastUsedAction'/><separator/><menu name='TransferCachesAction' action='TransferCachesAction'/><menu name='ReceiveFieldNotesAction' action='ReceiveFieldNotesAction'/><separator/><menuitem name='AddGPSProfileAction' action='AddGPSProfileAction'/><menu name='EditGPSProfileAction' action='EditGPSProfileAction'/><menuitem name='DeleteGPSProfileAction' action='DeleteGPSProfileAction'/></menu><menu name='ToolsAction' action='ToolsAction'><menuitem name='ViewAllInQLandkarteGTAction' action='ViewAllInQLandkarteGTAction'/><menuitem name='ViewSelectedCacheInQLandkarteGTAction' action='ViewSelectedCacheInQLandkarteGTAction'/><separator/><menu name='ExternalToolsAction' action='ExternalToolsAction'/><menuitem name='ConfigureExternalToolsAction' action='ConfigureExternalToolsAction'/><separator/><menuitem name='DatabaseCleanupAssistantAction' action='DatabaseCleanupAssistantAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='OCMWikiAction' action='OCMWikiAction'/><menuitem name='OCMForumsAction' action='OCMForumsAction'/><separator/><menuitem name='AboutAction' action='AboutAction'/><menuitem name='ChangeHistoryAction' action='ChangeHistoryAction'/><menuitem name='CheckForUpdatesAction' action='CheckForUpdatesAction'/></menu></menubar></ui>");
            this.mainMenuBar = ((Gtk.MenuBar)(this.UIManager.GetWidget("/mainMenuBar")));
            this.mainMenuBar.Name = "mainMenuBar";
            this.mainWindowContents.Add(this.mainMenuBar);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.mainWindowContents[this.mainMenuBar]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child mainWindowContents.Gtk.Box+BoxChild
            this.mainHPane = new Gtk.HPaned();
            this.mainHPane.CanFocus = true;
            this.mainHPane.Name = "mainHPane";
            this.mainHPane.Position = 300;
            // Container child mainHPane.Gtk.Paned+PanedChild
            this.cacheList = new ocmgtk.CacheListWidget();
            this.cacheList.Events = ((Gdk.EventMask)(256));
            this.cacheList.Name = "cacheList";
            this.cacheList.DisabledOrArchived = 0;
            this.cacheList.MineCount = 0;
            this.cacheList.VisibleCount = 0;
            this.cacheList.FoundCount = 0;
            this.mainHPane.Add(this.cacheList);
            Gtk.Paned.PanedChild w3 = ((Gtk.Paned.PanedChild)(this.mainHPane[this.cacheList]));
            w3.Resize = false;
            // Container child mainHPane.Gtk.Paned+PanedChild
            this.mainVPane = new Gtk.VPaned();
            this.mainVPane.CanFocus = true;
            this.mainVPane.Name = "mainVPane";
            this.mainVPane.Position = 385;
            // Container child mainVPane.Gtk.Paned+PanedChild
            this.ocmCacheInfo = new ocmgtk.CacheInfoWidget();
            this.ocmCacheInfo.Events = ((Gdk.EventMask)(256));
            this.ocmCacheInfo.Name = "ocmCacheInfo";
            this.mainVPane.Add(this.ocmCacheInfo);
            Gtk.Paned.PanedChild w4 = ((Gtk.Paned.PanedChild)(this.mainVPane[this.ocmCacheInfo]));
            w4.Resize = false;
            // Container child mainVPane.Gtk.Paned+PanedChild
            this.mapVBOX = new Gtk.VBox();
            this.mapVBOX.Name = "mapVBOX";
            // Container child mapVBOX.Gtk.Box+BoxChild
            this.hbox14 = new Gtk.HBox();
            this.hbox14.Name = "hbox14";
            // Container child hbox14.Gtk.Box+BoxChild
            this.spacerLabel = new Gtk.Label();
            this.spacerLabel.Name = "spacerLabel";
            this.hbox14.Add(this.spacerLabel);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.hbox14[this.spacerLabel]));
            w5.Position = 0;
            // Container child hbox14.Gtk.Box+BoxChild
            this.minButton = new Gtk.Button();
            this.minButton.CanFocus = true;
            this.minButton.Name = "minButton";
            this.minButton.FocusOnClick = false;
            this.minButton.Relief = ((Gtk.ReliefStyle)(2));
            // Container child minButton.Gtk.Container+ContainerChild
            this.image250 = new Gtk.Image();
            this.image250.Name = "image250";
            this.image250.Pixbuf = Gdk.Pixbuf.LoadFromResource("ocmgtk.icons.scalable.minicon.svg");
            this.minButton.Add(this.image250);
            this.minButton.Label = null;
            this.hbox14.Add(this.minButton);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.hbox14[this.minButton]));
            w7.Position = 1;
            w7.Expand = false;
            w7.Fill = false;
            // Container child hbox14.Gtk.Box+BoxChild
            this.mapDownButton = new Gtk.Button();
            this.mapDownButton.CanFocus = true;
            this.mapDownButton.Name = "mapDownButton";
            this.mapDownButton.Relief = ((Gtk.ReliefStyle)(2));
            // Container child mapDownButton.Gtk.Container+ContainerChild
            this.image38 = new Gtk.Image();
            this.image38.Name = "image38";
            this.image38.Pixbuf = Gdk.Pixbuf.LoadFromResource("ocmgtk.icons.scalable.down_icon.svg");
            this.mapDownButton.Add(this.image38);
            this.mapDownButton.Label = null;
            this.hbox14.Add(this.mapDownButton);
            Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(this.hbox14[this.mapDownButton]));
            w9.Position = 2;
            w9.Expand = false;
            w9.Fill = false;
            // Container child hbox14.Gtk.Box+BoxChild
            this.restoreButton = new Gtk.Button();
            this.restoreButton.CanFocus = true;
            this.restoreButton.Name = "restoreButton";
            this.restoreButton.Relief = ((Gtk.ReliefStyle)(2));
            // Container child restoreButton.Gtk.Container+ContainerChild
            this.image31 = new Gtk.Image();
            this.image31.Name = "image31";
            this.image31.Pixbuf = Gdk.Pixbuf.LoadFromResource("ocmgtk.icons.scalable.restore.svg");
            this.restoreButton.Add(this.image31);
            this.restoreButton.Label = null;
            this.hbox14.Add(this.restoreButton);
            Gtk.Box.BoxChild w11 = ((Gtk.Box.BoxChild)(this.hbox14[this.restoreButton]));
            w11.Position = 3;
            w11.Expand = false;
            w11.Fill = false;
            // Container child hbox14.Gtk.Box+BoxChild
            this.mapUpButton = new Gtk.Button();
            this.mapUpButton.CanFocus = true;
            this.mapUpButton.Name = "mapUpButton";
            this.mapUpButton.FocusOnClick = false;
            this.mapUpButton.Relief = ((Gtk.ReliefStyle)(2));
            // Container child mapUpButton.Gtk.Container+ContainerChild
            this.image37 = new Gtk.Image();
            this.image37.Name = "image37";
            this.image37.Pixbuf = Gdk.Pixbuf.LoadFromResource("ocmgtk.icons.scalable.up_icon.svg");
            this.mapUpButton.Add(this.image37);
            this.mapUpButton.Label = null;
            this.hbox14.Add(this.mapUpButton);
            Gtk.Box.BoxChild w13 = ((Gtk.Box.BoxChild)(this.hbox14[this.mapUpButton]));
            w13.Position = 4;
            w13.Expand = false;
            w13.Fill = false;
            this.mapVBOX.Add(this.hbox14);
            Gtk.Box.BoxChild w14 = ((Gtk.Box.BoxChild)(this.mapVBOX[this.hbox14]));
            w14.Position = 1;
            w14.Expand = false;
            w14.Fill = false;
            // Container child mapVBOX.Gtk.Box+BoxChild
            this.ocmMapWidget = new ocmgtk.MapWidget();
            this.ocmMapWidget.Events = ((Gdk.EventMask)(256));
            this.ocmMapWidget.Name = "ocmMapWidget";
            this.ocmMapWidget.ShowNearby = false;
            this.ocmMapWidget.ShowAllChildren = false;
            this.mapVBOX.Add(this.ocmMapWidget);
            Gtk.Box.BoxChild w15 = ((Gtk.Box.BoxChild)(this.mapVBOX[this.ocmMapWidget]));
            w15.Position = 2;
            this.mainVPane.Add(this.mapVBOX);
            this.mainHPane.Add(this.mainVPane);
            this.mainWindowContents.Add(this.mainHPane);
            Gtk.Box.BoxChild w18 = ((Gtk.Box.BoxChild)(this.mainWindowContents[this.mainHPane]));
            w18.Position = 1;
            // Container child mainWindowContents.Gtk.Box+BoxChild
            this.mainStatusBar = new Gtk.Statusbar();
            this.mainStatusBar.Name = "mainStatusBar";
            this.mainStatusBar.Spacing = 6;
            // Container child mainStatusBar.Gtk.Box+BoxChild
            this.LocationLabel = new Gtk.Label();
            this.LocationLabel.Name = "LocationLabel";
            this.LocationLabel.Xalign = 1F;
            this.LocationLabel.LabelProp = "<location>";
            this.mainStatusBar.Add(this.LocationLabel);
            Gtk.Box.BoxChild w19 = ((Gtk.Box.BoxChild)(this.mainStatusBar[this.LocationLabel]));
            w19.Position = 1;
            w19.Expand = false;
            w19.Fill = false;
            // Container child mainStatusBar.Gtk.Box+BoxChild
            this.statusProgressBar = new Gtk.ProgressBar();
            this.statusProgressBar.WidthRequest = 150;
            this.statusProgressBar.HeightRequest = 5;
            this.statusProgressBar.Name = "statusProgressBar";
            this.mainStatusBar.Add(this.statusProgressBar);
            Gtk.Box.BoxChild w20 = ((Gtk.Box.BoxChild)(this.mainStatusBar[this.statusProgressBar]));
            w20.PackType = ((Gtk.PackType)(1));
            w20.Position = 2;
            w20.Expand = false;
            this.mainWindowContents.Add(this.mainStatusBar);
            Gtk.Box.BoxChild w21 = ((Gtk.Box.BoxChild)(this.mainWindowContents[this.mainStatusBar]));
            w21.Position = 2;
            w21.Expand = false;
            w21.Fill = false;
            this.Add(this.mainWindowContents);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 1061;
            this.DefaultHeight = 574;
            this.statusProgressBar.Hide();
            this.Hide();
            this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteWindow);
            this.SizeAllocated += new Gtk.SizeAllocatedHandler(this.OnResizeWindow);
            this.openAction.Activated += new System.EventHandler(this.OnOpenDatabase);
            this.CompactDatabaseAction.Activated += new System.EventHandler(this.OnCompactDatabase);
            this.quitAction.Activated += new System.EventHandler(this.OnQuit);
            this.NewDatabaseAction.Activated += new System.EventHandler(this.OnNewDatabase);
            this.NewCacheAction.Activated += new System.EventHandler(this.OnNewCache);
            this.ShowNearbyCachesAction.Toggled += new System.EventHandler(this.OnToggleShowNearby);
            this.FieldNotesAction.Activated += new System.EventHandler(this.OnViewFieldNotes);
            this.SelectedCacheOnlyAction.Toggled += new System.EventHandler(this.OnToggleSelectedCache);
            this.printAction.Activated += new System.EventHandler(this.OnPrintCache);
            this.AddLocationAction.Activated += new System.EventHandler(this.OnAddLocation);
            this.DeleteLocationAction.Activated += new System.EventHandler(this.OnDeleteLocation);
            this.PanToCentreAction.Activated += new System.EventHandler(this.OnPanToCentre);
            this.PanToSelectedCacheAction.Activated += new System.EventHandler(this.OnPanToSelected);
            this.ZoomToSelectedCacheAction.Activated += new System.EventHandler(this.OnZoomToSelected);
            this.AdvancedFiltersAction.Activated += new System.EventHandler(this.OnAdvancedFiltersClick);
            this.CombinationFilterAction.Activated += new System.EventHandler(this.OnCombinationClick);
            this.ClearAdvancedFiltersAction.Activated += new System.EventHandler(this.OnClearAdvanced);
            this.ClearComboFilterAction.Activated += new System.EventHandler(this.OnClearCombo);
            this.ClearAllFiltersAction.Activated += new System.EventHandler(this.OnClearAll);
            this.OCMWikiAction.Activated += new System.EventHandler(this.OnWikiClick);
            this.OCMForumsAction.Activated += new System.EventHandler(this.OnForumsClick);
            this.AboutAction.Activated += new System.EventHandler(this.OnAboutClick);
            this.ChangeHistoryAction.Activated += new System.EventHandler(this.OnChangeHistoryClick);
            this.CheckForUpdatesAction.Activated += new System.EventHandler(this.OnCheckUpdatesClick);
            this.OCMHomePageAction.Activated += new System.EventHandler(this.OnOCMHomeClick);
            this.GPSBabelHomePageAction.Activated += new System.EventHandler(this.OnGPSBabelClick);
            this.GPSDHomePageAction.Activated += new System.EventHandler(this.OnGPSDClick);
            this.HomePageAction.Activated += new System.EventHandler(this.OnGCHomeClick);
            this.ViewMyProfileAction.Activated += new System.EventHandler(this.OnGCProfileClick);
            this.MyAccountDetailsAction.Activated += new System.EventHandler(this.OnGCAccountClick);
            this.CreatePocketQueriesAction.Activated += new System.EventHandler(this.OnGCPocketQueryClick);
            this.StatisticsAction.Activated += new System.EventHandler(this.OnGCStatsClick);
            this.FindACacheAction.Activated += new System.EventHandler(this.OnGCFindClick);
            this.TCHomePageAction.Activated += new System.EventHandler(this.OnTCHomePageClick);
            this.TraditionalAction.Activated += new System.EventHandler(this.OnTCTraditionalClick);
            this.LocationlessAction.Activated += new System.EventHandler(this.OnTCLocationlessClick);
            this.ListOfCountrySitesAction.Activated += new System.EventHandler(this.OnOCCountryList);
            this.NVHomePageAction.Activated += new System.EventHandler(this.OnNaviHome);
            this.MyNavicacheAction.Activated += new System.EventHandler(this.OnMyNavi);
            this.AddChildWaypointAction.Activated += new System.EventHandler(this.OnAddChildWaypoint);
            this.CorrectedCoordinatesAction.Activated += new System.EventHandler(this.OnAddCorrectedCoordinate);
            this.ViewOnlineAction.Activated += new System.EventHandler(this.OnViewOnlineClick);
            this.SetSelectedCacheAsCentreAction.Activated += new System.EventHandler(this.OnSetSelectedAsCentreClick);
            this.ModifyCacheAction.Activated += new System.EventHandler(this.OnModifyCache);
            this.MarkFoundAction.Activated += new System.EventHandler(this.OnMarkFound);
            this.MarkFirstToFindAction.Activated += new System.EventHandler(this.OnMarkFTF);
            this.MarkDidNotFindAction.Activated += new System.EventHandler(this.OnMarkDNF);
            this.MarkUnfoundAction.Activated += new System.EventHandler(this.OnMarkUnfound);
            this.MarkDisabledAction.Activated += new System.EventHandler(this.OnMarkDisabled);
            this.MarkArchivedAction.Activated += new System.EventHandler(this.OnMarkArchived);
            this.MarkAvailableAction.Activated += new System.EventHandler(this.OnMarkAvailable);
            this.RemoveSelectedCacheFromBookmarkListAction.Activated += new System.EventHandler(this.OnRemoveFromList);
            this.CreateBookmarkListAction.Activated += new System.EventHandler(this.OnCreateBookmarkList);
            this.DeleteBookmarkListAction.Activated += new System.EventHandler(this.OnDeleteBookmarkList);
            this.ZoomToCentreAction.Activated += new System.EventHandler(this.OnZoomToCentre);
            this.ImportGPXLocZipAction.Activated += new System.EventHandler(this.OnImportGPX);
            this.ImportDirectoryAction.Activated += new System.EventHandler(this.OnImportDirectory);
            this.SaveCurrentViewAsQuickFilterAction.Activated += new System.EventHandler(this.OnSaveQuickFilter);
            this.DeleteQuickFilterAction.Activated += new System.EventHandler(this.OnDeleteQuickFilter);
            this.ExportGPXAction.Activated += new System.EventHandler(this.OnExportGPX);
            this.ExportFindsGPXAction.Activated += new System.EventHandler(this.OnMyFindsClick);
            this.ExportGarminPOIFileAction.Activated += new System.EventHandler(this.OnExportPOI);
            this.CopyToAction.Activated += new System.EventHandler(this.OnCopy);
            this.MoveToAction.Activated += new System.EventHandler(this.OnMove);
            this.DeleteAction.Activated += new System.EventHandler(this.OnDelete);
            this.DeleteAllAction.Activated += new System.EventHandler(this.OnDeleteAll);
            this.DeselectAction.Activated += new System.EventHandler(this.OnDeselect);
            this.PreferencesAction.Activated += new System.EventHandler(this.OnPreferences);
            this.TransferCachesToLastUsedAction.Activated += new System.EventHandler(this.OnTransferLast);
            this.ReceiveFieldNotesFromLastUsedAction.Activated += new System.EventHandler(this.OnReceiveLast);
            this.AddGPSProfileAction.Activated += new System.EventHandler(this.OnAddProfile);
            this.DeleteGPSProfileAction.Activated += new System.EventHandler(this.OnDeleteProfile);
            this.ViewAllInQLandkarteGTAction.Activated += new System.EventHandler(this.OnViewInQLGT);
            this.ViewSelectedCacheInQLandkarteGTAction.Activated += new System.EventHandler(this.OnViewSelectedInQLGT);
            this.ConfigureExternalToolsAction.Activated += new System.EventHandler(this.OnConfigure);
            this.LogFindAction.Activated += new System.EventHandler(this.OnLogFind);
            this.LogToFieldNotesFileAction.Activated += new System.EventHandler(this.OnLogToFile);
            this.FullScreenAction.Toggled += new System.EventHandler(this.OnFullToggle);
            this.GrabImagesAction.Activated += new System.EventHandler(this.OnGrabImages);
            this.MapPopupsAction.Toggled += new System.EventHandler(this.OnMapPopupToggle);
            this.DatabaseCleanupAssistantAction.Activated += new System.EventHandler(this.OnCleanup);
            this.ReduceNumberOfLogsAction.Activated += new System.EventHandler(this.OnReduceLogs);
            this.GrabAllImagesAction.Activated += new System.EventHandler(this.OnGrabAllImages);
            this.GrabImagesAction1.Activated += new System.EventHandler(this.OnGrabImages);
            this.minButton.Clicked += new System.EventHandler(this.OnMinClick);
            this.mapDownButton.Clicked += new System.EventHandler(this.OnDownClick);
            this.restoreButton.Clicked += new System.EventHandler(this.OnRestoreClick);
            this.mapUpButton.Clicked += new System.EventHandler(this.OnUpClick);
        }
    }
}
