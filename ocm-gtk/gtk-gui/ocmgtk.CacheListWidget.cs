// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class CacheListWidget {
        
        private Gtk.VBox cacheListContents;
        
        private Gtk.HBox hbox2;
        
        private Gtk.Image searchImage;
        
        private Gtk.Entry nameEntry;
        
        private Gtk.Button clearNameButton;
        
        private Gtk.Image clearImage2;
        
        private Gtk.HBox hbox1;
        
        private Gtk.Image distanceImage;
        
        private Gtk.Entry distanceEntry;
        
        private Gtk.Label distanceLabel;
        
        private Gtk.Button clearDistanceButton;
        
        private Gtk.Image clearImage;
        
        private Gtk.Alignment statusAlign;
        
        private Gtk.Button statusInfo;
        
        private Gtk.HBox hbox3;
        
        private Gtk.Image image317;
        
        private Gtk.Label infoStatus;
        
        private Gtk.Table statusTable;
        
        private Gtk.CheckButton archiveCheck;
        
        private Gtk.CheckButton availCheck;
        
        private Gtk.CheckButton foundCheck;
        
        private Gtk.CheckButton mineCheck;
        
        private Gtk.CheckButton notAvailCheck;
        
        private Gtk.CheckButton notFoundCheck;
        
        private Gtk.ScrolledWindow cacheListScroll;
        
        private Gtk.TreeView cacheListTree;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.CacheListWidget
            Stetic.BinContainer.Attach(this);
            this.Name = "ocmgtk.CacheListWidget";
            // Container child ocmgtk.CacheListWidget.Gtk.Container+ContainerChild
            this.cacheListContents = new Gtk.VBox();
            this.cacheListContents.Name = "cacheListContents";
            this.cacheListContents.Spacing = 6;
            this.cacheListContents.BorderWidth = ((uint)(6));
            // Container child cacheListContents.Gtk.Box+BoxChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.searchImage = new Gtk.Image();
            this.searchImage.Name = "searchImage";
            this.searchImage.Pixbuf = Gdk.Pixbuf.LoadFromResource("ocmgtk.icons.scalable.SearchIcon.svg");
            this.hbox2.Add(this.searchImage);
            Gtk.Box.BoxChild w1 = ((Gtk.Box.BoxChild)(this.hbox2[this.searchImage]));
            w1.Position = 0;
            w1.Expand = false;
            w1.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.nameEntry = new Gtk.Entry();
            this.nameEntry.CanFocus = true;
            this.nameEntry.Name = "nameEntry";
            this.nameEntry.IsEditable = true;
            this.nameEntry.InvisibleChar = '●';
            this.hbox2.Add(this.nameEntry);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.hbox2[this.nameEntry]));
            w2.Position = 1;
            // Container child hbox2.Gtk.Box+BoxChild
            this.clearNameButton = new Gtk.Button();
            this.clearNameButton.Sensitive = false;
            this.clearNameButton.CanFocus = true;
            this.clearNameButton.Name = "clearNameButton";
            // Container child clearNameButton.Gtk.Container+ContainerChild
            this.clearImage2 = new Gtk.Image();
            this.clearImage2.Name = "clearImage2";
            this.clearImage2.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-clear", Gtk.IconSize.Menu, 16);
            this.clearNameButton.Add(this.clearImage2);
            this.clearNameButton.Label = null;
            this.hbox2.Add(this.clearNameButton);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.hbox2[this.clearNameButton]));
            w4.Position = 2;
            w4.Expand = false;
            w4.Fill = false;
            this.cacheListContents.Add(this.hbox2);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.cacheListContents[this.hbox2]));
            w5.Position = 0;
            w5.Expand = false;
            w5.Fill = false;
            // Container child cacheListContents.Gtk.Box+BoxChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Spacing = 6;
            // Container child hbox1.Gtk.Box+BoxChild
            this.distanceImage = new Gtk.Image();
            this.distanceImage.Name = "distanceImage";
            this.distanceImage.Pixbuf = Gdk.Pixbuf.LoadFromResource("ocmgtk.icons.scalable.DistIcon.svg");
            this.hbox1.Add(this.distanceImage);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.hbox1[this.distanceImage]));
            w6.Position = 0;
            w6.Expand = false;
            w6.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.distanceEntry = new Gtk.Entry();
            this.distanceEntry.CanFocus = true;
            this.distanceEntry.Name = "distanceEntry";
            this.distanceEntry.IsEditable = true;
            this.distanceEntry.InvisibleChar = '●';
            this.hbox1.Add(this.distanceEntry);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.hbox1[this.distanceEntry]));
            w7.Position = 1;
            // Container child hbox1.Gtk.Box+BoxChild
            this.distanceLabel = new Gtk.Label();
            this.distanceLabel.Name = "distanceLabel";
            this.distanceLabel.LabelProp = Mono.Unix.Catalog.GetString("km");
            this.hbox1.Add(this.distanceLabel);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(this.hbox1[this.distanceLabel]));
            w8.Position = 2;
            w8.Expand = false;
            w8.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.clearDistanceButton = new Gtk.Button();
            this.clearDistanceButton.Sensitive = false;
            this.clearDistanceButton.CanFocus = true;
            this.clearDistanceButton.Name = "clearDistanceButton";
            // Container child clearDistanceButton.Gtk.Container+ContainerChild
            this.clearImage = new Gtk.Image();
            this.clearImage.Name = "clearImage";
            this.clearImage.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-clear", Gtk.IconSize.Menu, 16);
            this.clearDistanceButton.Add(this.clearImage);
            this.clearDistanceButton.Label = null;
            this.hbox1.Add(this.clearDistanceButton);
            Gtk.Box.BoxChild w10 = ((Gtk.Box.BoxChild)(this.hbox1[this.clearDistanceButton]));
            w10.Position = 3;
            w10.Expand = false;
            w10.Fill = false;
            this.cacheListContents.Add(this.hbox1);
            Gtk.Box.BoxChild w11 = ((Gtk.Box.BoxChild)(this.cacheListContents[this.hbox1]));
            w11.Position = 1;
            w11.Expand = false;
            w11.Fill = false;
            // Container child cacheListContents.Gtk.Box+BoxChild
            this.statusAlign = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.statusAlign.Name = "statusAlign";
            // Container child statusAlign.Gtk.Container+ContainerChild
            this.statusInfo = new Gtk.Button();
            this.statusInfo.Sensitive = false;
            this.statusInfo.CanFocus = true;
            this.statusInfo.Name = "statusInfo";
            this.statusInfo.FocusOnClick = false;
            this.statusInfo.Relief = ((Gtk.ReliefStyle)(2));
            // Container child statusInfo.Gtk.Container+ContainerChild
            this.hbox3 = new Gtk.HBox();
            this.hbox3.Name = "hbox3";
            this.hbox3.Spacing = 6;
            // Container child hbox3.Gtk.Box+BoxChild
            this.image317 = new Gtk.Image();
            this.image317.Name = "image317";
            this.image317.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-dialog-info", Gtk.IconSize.Menu, 16);
            this.hbox3.Add(this.image317);
            Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(this.hbox3[this.image317]));
            w12.Position = 0;
            w12.Expand = false;
            w12.Fill = false;
            // Container child hbox3.Gtk.Box+BoxChild
            this.infoStatus = new Gtk.Label();
            this.infoStatus.Name = "infoStatus";
            this.infoStatus.LabelProp = Mono.Unix.Catalog.GetString("Loading...");
            this.hbox3.Add(this.infoStatus);
            Gtk.Box.BoxChild w13 = ((Gtk.Box.BoxChild)(this.hbox3[this.infoStatus]));
            w13.Position = 1;
            w13.Expand = false;
            w13.Fill = false;
            this.statusInfo.Add(this.hbox3);
            this.statusInfo.Label = null;
            this.statusAlign.Add(this.statusInfo);
            this.cacheListContents.Add(this.statusAlign);
            Gtk.Box.BoxChild w16 = ((Gtk.Box.BoxChild)(this.cacheListContents[this.statusAlign]));
            w16.Position = 2;
            w16.Expand = false;
            w16.Fill = false;
            // Container child cacheListContents.Gtk.Box+BoxChild
            this.statusTable = new Gtk.Table(((uint)(2)), ((uint)(3)), false);
            this.statusTable.Name = "statusTable";
            this.statusTable.RowSpacing = ((uint)(6));
            this.statusTable.ColumnSpacing = ((uint)(6));
            // Container child statusTable.Gtk.Table+TableChild
            this.archiveCheck = new Gtk.CheckButton();
            this.archiveCheck.CanFocus = true;
            this.archiveCheck.Name = "archiveCheck";
            this.archiveCheck.Label = Mono.Unix.Catalog.GetString("Archived");
            this.archiveCheck.Active = true;
            this.archiveCheck.DrawIndicator = true;
            this.archiveCheck.UseUnderline = true;
            this.statusTable.Add(this.archiveCheck);
            Gtk.Table.TableChild w17 = ((Gtk.Table.TableChild)(this.statusTable[this.archiveCheck]));
            w17.TopAttach = ((uint)(1));
            w17.BottomAttach = ((uint)(2));
            w17.LeftAttach = ((uint)(2));
            w17.RightAttach = ((uint)(3));
            w17.YOptions = ((Gtk.AttachOptions)(4));
            // Container child statusTable.Gtk.Table+TableChild
            this.availCheck = new Gtk.CheckButton();
            this.availCheck.CanFocus = true;
            this.availCheck.Name = "availCheck";
            this.availCheck.Label = Mono.Unix.Catalog.GetString("Available");
            this.availCheck.Active = true;
            this.availCheck.DrawIndicator = true;
            this.availCheck.UseUnderline = true;
            this.statusTable.Add(this.availCheck);
            Gtk.Table.TableChild w18 = ((Gtk.Table.TableChild)(this.statusTable[this.availCheck]));
            w18.TopAttach = ((uint)(1));
            w18.BottomAttach = ((uint)(2));
            w18.YOptions = ((Gtk.AttachOptions)(4));
            // Container child statusTable.Gtk.Table+TableChild
            this.foundCheck = new Gtk.CheckButton();
            this.foundCheck.CanFocus = true;
            this.foundCheck.Name = "foundCheck";
            this.foundCheck.Label = Mono.Unix.Catalog.GetString("Found");
            this.foundCheck.Active = true;
            this.foundCheck.DrawIndicator = true;
            this.foundCheck.UseUnderline = true;
            this.statusTable.Add(this.foundCheck);
            Gtk.Table.TableChild w19 = ((Gtk.Table.TableChild)(this.statusTable[this.foundCheck]));
            w19.YOptions = ((Gtk.AttachOptions)(4));
            // Container child statusTable.Gtk.Table+TableChild
            this.mineCheck = new Gtk.CheckButton();
            this.mineCheck.CanFocus = true;
            this.mineCheck.Name = "mineCheck";
            this.mineCheck.Label = Mono.Unix.Catalog.GetString("Mine");
            this.mineCheck.Active = true;
            this.mineCheck.DrawIndicator = true;
            this.mineCheck.UseUnderline = true;
            this.statusTable.Add(this.mineCheck);
            Gtk.Table.TableChild w20 = ((Gtk.Table.TableChild)(this.statusTable[this.mineCheck]));
            w20.LeftAttach = ((uint)(2));
            w20.RightAttach = ((uint)(3));
            w20.YOptions = ((Gtk.AttachOptions)(4));
            // Container child statusTable.Gtk.Table+TableChild
            this.notAvailCheck = new Gtk.CheckButton();
            this.notAvailCheck.CanFocus = true;
            this.notAvailCheck.Name = "notAvailCheck";
            this.notAvailCheck.Label = Mono.Unix.Catalog.GetString("Not Available");
            this.notAvailCheck.Active = true;
            this.notAvailCheck.DrawIndicator = true;
            this.notAvailCheck.UseUnderline = true;
            this.statusTable.Add(this.notAvailCheck);
            Gtk.Table.TableChild w21 = ((Gtk.Table.TableChild)(this.statusTable[this.notAvailCheck]));
            w21.TopAttach = ((uint)(1));
            w21.BottomAttach = ((uint)(2));
            w21.LeftAttach = ((uint)(1));
            w21.RightAttach = ((uint)(2));
            w21.YOptions = ((Gtk.AttachOptions)(4));
            // Container child statusTable.Gtk.Table+TableChild
            this.notFoundCheck = new Gtk.CheckButton();
            this.notFoundCheck.CanFocus = true;
            this.notFoundCheck.Name = "notFoundCheck";
            this.notFoundCheck.Label = Mono.Unix.Catalog.GetString("Not Found");
            this.notFoundCheck.Active = true;
            this.notFoundCheck.DrawIndicator = true;
            this.notFoundCheck.UseUnderline = true;
            this.statusTable.Add(this.notFoundCheck);
            Gtk.Table.TableChild w22 = ((Gtk.Table.TableChild)(this.statusTable[this.notFoundCheck]));
            w22.LeftAttach = ((uint)(1));
            w22.RightAttach = ((uint)(2));
            w22.YOptions = ((Gtk.AttachOptions)(4));
            this.cacheListContents.Add(this.statusTable);
            Gtk.Box.BoxChild w23 = ((Gtk.Box.BoxChild)(this.cacheListContents[this.statusTable]));
            w23.Position = 3;
            w23.Expand = false;
            w23.Fill = false;
            // Container child cacheListContents.Gtk.Box+BoxChild
            this.cacheListScroll = new Gtk.ScrolledWindow();
            this.cacheListScroll.CanFocus = true;
            this.cacheListScroll.Name = "cacheListScroll";
            this.cacheListScroll.ShadowType = ((Gtk.ShadowType)(1));
            // Container child cacheListScroll.Gtk.Container+ContainerChild
            this.cacheListTree = new Gtk.TreeView();
            this.cacheListTree.CanFocus = true;
            this.cacheListTree.Name = "cacheListTree";
            this.cacheListTree.EnableSearch = false;
            this.cacheListScroll.Add(this.cacheListTree);
            this.cacheListContents.Add(this.cacheListScroll);
            Gtk.Box.BoxChild w25 = ((Gtk.Box.BoxChild)(this.cacheListContents[this.cacheListScroll]));
            w25.Position = 4;
            this.Add(this.cacheListContents);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.statusInfo.Hide();
            this.Hide();
            this.nameEntry.Changed += new System.EventHandler(this.OnChanged);
            this.nameEntry.Activated += new System.EventHandler(this.OnNameActivated);
            this.clearNameButton.Clicked += new System.EventHandler(this.OnClearNameClick);
            this.distanceEntry.Changed += new System.EventHandler(this.OnChanged);
            this.distanceEntry.Activated += new System.EventHandler(this.OnDistActivated);
            this.clearDistanceButton.Clicked += new System.EventHandler(this.OnClearDistClicked);
            this.statusInfo.Clicked += new System.EventHandler(this.OnStatusClick);
            this.notFoundCheck.Toggled += new System.EventHandler(this.OnFoundStatusToggle);
            this.notAvailCheck.Toggled += new System.EventHandler(this.OnAvailStatusToggle);
            this.mineCheck.Toggled += new System.EventHandler(this.OnFoundStatusToggle);
            this.foundCheck.Toggled += new System.EventHandler(this.OnFoundStatusToggle);
            this.availCheck.Toggled += new System.EventHandler(this.OnAvailStatusToggle);
            this.archiveCheck.Toggled += new System.EventHandler(this.OnAvailStatusToggle);
            this.cacheListTree.ButtonPressEvent += new Gtk.ButtonPressEventHandler(this.OnButtonPress);
        }
    }
}
