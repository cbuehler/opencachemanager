// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class OCMQueryPage4 {
        
        private Gtk.VBox vbox2;
        
        private Gtk.Frame frame1;
        
        private Gtk.Alignment GtkAlignment;
        
        private Gtk.Table table2;
        
        private Gtk.CheckButton hasNotesCheck;
        
        private Gtk.CheckButton ud1Check;
        
        private Gtk.CheckButton ud2Check;
        
        private Gtk.CheckButton ud3Check;
        
        private Gtk.CheckButton ud4Check;
        
        private Gtk.Entry uEntry1;
        
        private Gtk.Entry uEntry2;
        
        private Gtk.Entry uEntry3;
        
        private Gtk.Entry uEntry4;
        
        private Gtk.Label GtkLabel5;
        
        private Gtk.Frame frame2;
        
        private Gtk.Alignment GtkAlignment1;
        
        private Gtk.Table table3;
        
        private Gtk.ComboBox childCombo;
        
        private Gtk.CheckButton hasChildCheck;
        
        private Gtk.CheckButton hasCorrectedCheck;
        
        private Gtk.CheckButton hasNoChildCheck;
        
        private Gtk.ComboBox noChildCombo;
        
        private Gtk.CheckButton noCorrectCheck;
        
        private Gtk.Label GtkLabel9;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.OCMQueryPage4
            Stetic.BinContainer.Attach(this);
            this.Name = "ocmgtk.OCMQueryPage4";
            // Container child ocmgtk.OCMQueryPage4.Gtk.Container+ContainerChild
            this.vbox2 = new Gtk.VBox();
            this.vbox2.Name = "vbox2";
            this.vbox2.Spacing = 6;
            this.vbox2.BorderWidth = ((uint)(6));
            // Container child vbox2.Gtk.Box+BoxChild
            this.frame1 = new Gtk.Frame();
            this.frame1.Name = "frame1";
            this.frame1.ShadowType = ((Gtk.ShadowType)(0));
            // Container child frame1.Gtk.Container+ContainerChild
            this.GtkAlignment = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment.Name = "GtkAlignment";
            this.GtkAlignment.LeftPadding = ((uint)(12));
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            this.table2 = new Gtk.Table(((uint)(5)), ((uint)(2)), false);
            this.table2.Name = "table2";
            this.table2.RowSpacing = ((uint)(6));
            this.table2.ColumnSpacing = ((uint)(6));
            // Container child table2.Gtk.Table+TableChild
            this.hasNotesCheck = new Gtk.CheckButton();
            this.hasNotesCheck.CanFocus = true;
            this.hasNotesCheck.Name = "hasNotesCheck";
            this.hasNotesCheck.Label = Mono.Unix.Catalog.GetString("Has user notes");
            this.hasNotesCheck.DrawIndicator = true;
            this.hasNotesCheck.UseUnderline = true;
            this.table2.Add(this.hasNotesCheck);
            Gtk.Table.TableChild w1 = ((Gtk.Table.TableChild)(this.table2[this.hasNotesCheck]));
            w1.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.ud1Check = new Gtk.CheckButton();
            this.ud1Check.CanFocus = true;
            this.ud1Check.Name = "ud1Check";
            this.ud1Check.Label = Mono.Unix.Catalog.GetString("User Data 1 contains:");
            this.ud1Check.DrawIndicator = true;
            this.ud1Check.UseUnderline = true;
            this.table2.Add(this.ud1Check);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table2[this.ud1Check]));
            w2.TopAttach = ((uint)(1));
            w2.BottomAttach = ((uint)(2));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.ud2Check = new Gtk.CheckButton();
            this.ud2Check.CanFocus = true;
            this.ud2Check.Name = "ud2Check";
            this.ud2Check.Label = Mono.Unix.Catalog.GetString("User Data 2 contains:");
            this.ud2Check.DrawIndicator = true;
            this.ud2Check.UseUnderline = true;
            this.table2.Add(this.ud2Check);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table2[this.ud2Check]));
            w3.TopAttach = ((uint)(2));
            w3.BottomAttach = ((uint)(3));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.ud3Check = new Gtk.CheckButton();
            this.ud3Check.CanFocus = true;
            this.ud3Check.Name = "ud3Check";
            this.ud3Check.Label = Mono.Unix.Catalog.GetString("User Data 3 contains:");
            this.ud3Check.DrawIndicator = true;
            this.ud3Check.UseUnderline = true;
            this.table2.Add(this.ud3Check);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table2[this.ud3Check]));
            w4.TopAttach = ((uint)(3));
            w4.BottomAttach = ((uint)(4));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.ud4Check = new Gtk.CheckButton();
            this.ud4Check.CanFocus = true;
            this.ud4Check.Name = "ud4Check";
            this.ud4Check.Label = Mono.Unix.Catalog.GetString("User Data 4 contains:");
            this.ud4Check.DrawIndicator = true;
            this.ud4Check.UseUnderline = true;
            this.table2.Add(this.ud4Check);
            Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(this.table2[this.ud4Check]));
            w5.TopAttach = ((uint)(4));
            w5.BottomAttach = ((uint)(5));
            w5.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.uEntry1 = new Gtk.Entry();
            this.uEntry1.Sensitive = false;
            this.uEntry1.CanFocus = true;
            this.uEntry1.Name = "uEntry1";
            this.uEntry1.IsEditable = true;
            this.uEntry1.InvisibleChar = '•';
            this.table2.Add(this.uEntry1);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.table2[this.uEntry1]));
            w6.TopAttach = ((uint)(1));
            w6.BottomAttach = ((uint)(2));
            w6.LeftAttach = ((uint)(1));
            w6.RightAttach = ((uint)(2));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.uEntry2 = new Gtk.Entry();
            this.uEntry2.Sensitive = false;
            this.uEntry2.CanFocus = true;
            this.uEntry2.Name = "uEntry2";
            this.uEntry2.IsEditable = true;
            this.uEntry2.InvisibleChar = '•';
            this.table2.Add(this.uEntry2);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table2[this.uEntry2]));
            w7.TopAttach = ((uint)(2));
            w7.BottomAttach = ((uint)(3));
            w7.LeftAttach = ((uint)(1));
            w7.RightAttach = ((uint)(2));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.uEntry3 = new Gtk.Entry();
            this.uEntry3.Sensitive = false;
            this.uEntry3.CanFocus = true;
            this.uEntry3.Name = "uEntry3";
            this.uEntry3.IsEditable = true;
            this.uEntry3.InvisibleChar = '•';
            this.table2.Add(this.uEntry3);
            Gtk.Table.TableChild w8 = ((Gtk.Table.TableChild)(this.table2[this.uEntry3]));
            w8.TopAttach = ((uint)(3));
            w8.BottomAttach = ((uint)(4));
            w8.LeftAttach = ((uint)(1));
            w8.RightAttach = ((uint)(2));
            w8.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table2.Gtk.Table+TableChild
            this.uEntry4 = new Gtk.Entry();
            this.uEntry4.Sensitive = false;
            this.uEntry4.CanFocus = true;
            this.uEntry4.Name = "uEntry4";
            this.uEntry4.IsEditable = true;
            this.uEntry4.InvisibleChar = '•';
            this.table2.Add(this.uEntry4);
            Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(this.table2[this.uEntry4]));
            w9.TopAttach = ((uint)(4));
            w9.BottomAttach = ((uint)(5));
            w9.LeftAttach = ((uint)(1));
            w9.RightAttach = ((uint)(2));
            w9.YOptions = ((Gtk.AttachOptions)(4));
            this.GtkAlignment.Add(this.table2);
            this.frame1.Add(this.GtkAlignment);
            this.GtkLabel5 = new Gtk.Label();
            this.GtkLabel5.Name = "GtkLabel5";
            this.GtkLabel5.LabelProp = Mono.Unix.Catalog.GetString("<b>User Notes &amp; Data</b>");
            this.GtkLabel5.UseMarkup = true;
            this.frame1.LabelWidget = this.GtkLabel5;
            this.vbox2.Add(this.frame1);
            Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(this.vbox2[this.frame1]));
            w12.Position = 0;
            w12.Expand = false;
            w12.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.frame2 = new Gtk.Frame();
            this.frame2.Name = "frame2";
            this.frame2.ShadowType = ((Gtk.ShadowType)(0));
            // Container child frame2.Gtk.Container+ContainerChild
            this.GtkAlignment1 = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment1.Name = "GtkAlignment1";
            this.GtkAlignment1.LeftPadding = ((uint)(12));
            // Container child GtkAlignment1.Gtk.Container+ContainerChild
            this.table3 = new Gtk.Table(((uint)(4)), ((uint)(2)), false);
            this.table3.Name = "table3";
            this.table3.RowSpacing = ((uint)(6));
            this.table3.ColumnSpacing = ((uint)(6));
            // Container child table3.Gtk.Table+TableChild
            this.childCombo = Gtk.ComboBox.NewText();
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Final Location"));
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Parking Area"));
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Question To Answer"));
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Reference Point"));
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Stages of a Multicache"));
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Trailhead"));
            this.childCombo.AppendText(Mono.Unix.Catalog.GetString("Other"));
            this.childCombo.Sensitive = false;
            this.childCombo.Name = "childCombo";
            this.childCombo.Active = 0;
            this.table3.Add(this.childCombo);
            Gtk.Table.TableChild w13 = ((Gtk.Table.TableChild)(this.table3[this.childCombo]));
            w13.LeftAttach = ((uint)(1));
            w13.RightAttach = ((uint)(2));
            w13.XOptions = ((Gtk.AttachOptions)(4));
            w13.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.hasChildCheck = new Gtk.CheckButton();
            this.hasChildCheck.CanFocus = true;
            this.hasChildCheck.Name = "hasChildCheck";
            this.hasChildCheck.Label = Mono.Unix.Catalog.GetString("Has at least one child of type:");
            this.hasChildCheck.DrawIndicator = true;
            this.hasChildCheck.UseUnderline = true;
            this.table3.Add(this.hasChildCheck);
            Gtk.Table.TableChild w14 = ((Gtk.Table.TableChild)(this.table3[this.hasChildCheck]));
            w14.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.hasCorrectedCheck = new Gtk.CheckButton();
            this.hasCorrectedCheck.CanFocus = true;
            this.hasCorrectedCheck.Name = "hasCorrectedCheck";
            this.hasCorrectedCheck.Label = Mono.Unix.Catalog.GetString("Has corrected coordinates");
            this.hasCorrectedCheck.DrawIndicator = true;
            this.hasCorrectedCheck.UseUnderline = true;
            this.table3.Add(this.hasCorrectedCheck);
            Gtk.Table.TableChild w15 = ((Gtk.Table.TableChild)(this.table3[this.hasCorrectedCheck]));
            w15.TopAttach = ((uint)(2));
            w15.BottomAttach = ((uint)(3));
            w15.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.hasNoChildCheck = new Gtk.CheckButton();
            this.hasNoChildCheck.CanFocus = true;
            this.hasNoChildCheck.Name = "hasNoChildCheck";
            this.hasNoChildCheck.Label = Mono.Unix.Catalog.GetString("Does not have any children of type:");
            this.hasNoChildCheck.DrawIndicator = true;
            this.hasNoChildCheck.UseUnderline = true;
            this.table3.Add(this.hasNoChildCheck);
            Gtk.Table.TableChild w16 = ((Gtk.Table.TableChild)(this.table3[this.hasNoChildCheck]));
            w16.TopAttach = ((uint)(1));
            w16.BottomAttach = ((uint)(2));
            w16.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.noChildCombo = Gtk.ComboBox.NewText();
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Final Location"));
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Parking Area"));
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Question To Answer"));
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Reference Point"));
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Stages of a Multicache"));
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Trailhead"));
            this.noChildCombo.AppendText(Mono.Unix.Catalog.GetString("Other"));
            this.noChildCombo.Sensitive = false;
            this.noChildCombo.Name = "noChildCombo";
            this.noChildCombo.Active = 0;
            this.table3.Add(this.noChildCombo);
            Gtk.Table.TableChild w17 = ((Gtk.Table.TableChild)(this.table3[this.noChildCombo]));
            w17.TopAttach = ((uint)(1));
            w17.BottomAttach = ((uint)(2));
            w17.LeftAttach = ((uint)(1));
            w17.RightAttach = ((uint)(2));
            w17.XOptions = ((Gtk.AttachOptions)(4));
            w17.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table3.Gtk.Table+TableChild
            this.noCorrectCheck = new Gtk.CheckButton();
            this.noCorrectCheck.CanFocus = true;
            this.noCorrectCheck.Name = "noCorrectCheck";
            this.noCorrectCheck.Label = Mono.Unix.Catalog.GetString("Does not have corrected coordinates");
            this.noCorrectCheck.DrawIndicator = true;
            this.noCorrectCheck.UseUnderline = true;
            this.table3.Add(this.noCorrectCheck);
            Gtk.Table.TableChild w18 = ((Gtk.Table.TableChild)(this.table3[this.noCorrectCheck]));
            w18.TopAttach = ((uint)(3));
            w18.BottomAttach = ((uint)(4));
            w18.YOptions = ((Gtk.AttachOptions)(4));
            this.GtkAlignment1.Add(this.table3);
            this.frame2.Add(this.GtkAlignment1);
            this.GtkLabel9 = new Gtk.Label();
            this.GtkLabel9.Name = "GtkLabel9";
            this.GtkLabel9.LabelProp = Mono.Unix.Catalog.GetString("<b>Waypoints &amp; Corrected Coordinates</b>");
            this.GtkLabel9.UseMarkup = true;
            this.frame2.LabelWidget = this.GtkLabel9;
            this.vbox2.Add(this.frame2);
            Gtk.Box.BoxChild w21 = ((Gtk.Box.BoxChild)(this.vbox2[this.frame2]));
            w21.Position = 1;
            w21.Expand = false;
            w21.Fill = false;
            this.Add(this.vbox2);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Hide();
            this.ud4Check.Toggled += new System.EventHandler(this.OnU4Toggle);
            this.ud3Check.Toggled += new System.EventHandler(this.OnU3Toggle);
            this.ud2Check.Toggled += new System.EventHandler(this.OnU2Toggle);
            this.ud1Check.Toggled += new System.EventHandler(this.OnU1Toggle);
            this.hasNoChildCheck.Toggled += new System.EventHandler(this.OnHasNoChildToggle);
            this.hasChildCheck.Toggled += new System.EventHandler(this.OnHasChildToggle);
        }
    }
}
