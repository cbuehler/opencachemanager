// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ocmgtk {
    
    
    public partial class ImportDirectoryDialog {
        
        private Gtk.Table table1;
        
        private Gtk.FileChooserButton dirChooser;
        
        private Gtk.Label label1;
        
        private Gtk.Frame frame1;
        
        private Gtk.Alignment GtkAlignment2;
        
        private Gtk.VBox vbox2;
        
        private Gtk.CheckButton deleteCheck;
        
        private Gtk.CheckButton statusCheck;
        
        private Gtk.CheckButton oldLogsCheck;
        
        private Gtk.CheckButton gsakFieldsCheck;
        
        private Gtk.HBox hbox1;
        
        private Gtk.CheckButton addToListCheck;
        
        private Gtk.ComboBox bmCombo;
        
        private Gtk.Button addBmrkButton;
        
        private Gtk.Image image20;
        
        private Gtk.Label GtkLabel7;
        
        private Gtk.Button buttonCancel;
        
        private Gtk.Button buttonOk;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget ocmgtk.ImportDirectoryDialog
            this.WidthRequest = 500;
            this.Name = "ocmgtk.ImportDirectoryDialog";
            this.Title = Mono.Unix.Catalog.GetString("Import Directory");
            this.TypeHint = ((Gdk.WindowTypeHint)(1));
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.Modal = true;
            this.BorderWidth = ((uint)(6));
            this.Resizable = false;
            this.AllowGrow = false;
            // Internal child ocmgtk.ImportDirectoryDialog.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.table1 = new Gtk.Table(((uint)(1)), ((uint)(2)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(6));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.dirChooser = new Gtk.FileChooserButton(Mono.Unix.Catalog.GetString("Select A Folder"), ((Gtk.FileChooserAction)(2)));
            this.dirChooser.Name = "dirChooser";
            this.dirChooser.ShowHidden = true;
            this.table1.Add(this.dirChooser);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table1[this.dirChooser]));
            w2.LeftAttach = ((uint)(1));
            w2.RightAttach = ((uint)(2));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label1 = new Gtk.Label();
            this.label1.Name = "label1";
            this.label1.LabelProp = Mono.Unix.Catalog.GetString("Directory:");
            this.table1.Add(this.label1);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table1[this.label1]));
            w3.XOptions = ((Gtk.AttachOptions)(4));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            w1.Add(this.table1);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(w1[this.table1]));
            w4.Position = 0;
            w4.Expand = false;
            w4.Fill = false;
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.frame1 = new Gtk.Frame();
            this.frame1.Name = "frame1";
            this.frame1.ShadowType = ((Gtk.ShadowType)(0));
            // Container child frame1.Gtk.Container+ContainerChild
            this.GtkAlignment2 = new Gtk.Alignment(0F, 0F, 1F, 1F);
            this.GtkAlignment2.Name = "GtkAlignment2";
            this.GtkAlignment2.LeftPadding = ((uint)(12));
            // Container child GtkAlignment2.Gtk.Container+ContainerChild
            this.vbox2 = new Gtk.VBox();
            this.vbox2.Name = "vbox2";
            this.vbox2.Spacing = 6;
            // Container child vbox2.Gtk.Box+BoxChild
            this.deleteCheck = new Gtk.CheckButton();
            this.deleteCheck.CanFocus = true;
            this.deleteCheck.Name = "deleteCheck";
            this.deleteCheck.Label = Mono.Unix.Catalog.GetString("Delete files on completion");
            this.deleteCheck.DrawIndicator = true;
            this.deleteCheck.UseUnderline = true;
            this.vbox2.Add(this.deleteCheck);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox2[this.deleteCheck]));
            w5.Position = 0;
            w5.Expand = false;
            w5.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.statusCheck = new Gtk.CheckButton();
            this.statusCheck.CanFocus = true;
            this.statusCheck.Name = "statusCheck";
            this.statusCheck.Label = Mono.Unix.Catalog.GetString("Do not overwrite existing found status in database");
            this.statusCheck.DrawIndicator = true;
            this.statusCheck.UseUnderline = true;
            this.vbox2.Add(this.statusCheck);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.vbox2[this.statusCheck]));
            w6.Position = 1;
            w6.Expand = false;
            w6.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.oldLogsCheck = new Gtk.CheckButton();
            this.oldLogsCheck.CanFocus = true;
            this.oldLogsCheck.Name = "oldLogsCheck";
            this.oldLogsCheck.Label = Mono.Unix.Catalog.GetString("Purge old cache logs");
            this.oldLogsCheck.DrawIndicator = true;
            this.oldLogsCheck.UseUnderline = true;
            this.vbox2.Add(this.oldLogsCheck);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.vbox2[this.oldLogsCheck]));
            w7.Position = 2;
            w7.Expand = false;
            w7.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.gsakFieldsCheck = new Gtk.CheckButton();
            this.gsakFieldsCheck.CanFocus = true;
            this.gsakFieldsCheck.Name = "gsakFieldsCheck";
            this.gsakFieldsCheck.Label = Mono.Unix.Catalog.GetString("Ignore GSAK/OCM extra fields in GPX file");
            this.gsakFieldsCheck.DrawIndicator = true;
            this.gsakFieldsCheck.UseUnderline = true;
            this.vbox2.Add(this.gsakFieldsCheck);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(this.vbox2[this.gsakFieldsCheck]));
            w8.Position = 3;
            w8.Expand = false;
            w8.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Spacing = 6;
            // Container child hbox1.Gtk.Box+BoxChild
            this.addToListCheck = new Gtk.CheckButton();
            this.addToListCheck.CanFocus = true;
            this.addToListCheck.Name = "addToListCheck";
            this.addToListCheck.Label = Mono.Unix.Catalog.GetString("Add to bookmark list:");
            this.addToListCheck.DrawIndicator = true;
            this.addToListCheck.UseUnderline = true;
            this.hbox1.Add(this.addToListCheck);
            Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(this.hbox1[this.addToListCheck]));
            w9.Position = 0;
            w9.Expand = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.bmCombo = Gtk.ComboBox.NewText();
            this.bmCombo.Sensitive = false;
            this.bmCombo.Name = "bmCombo";
            this.hbox1.Add(this.bmCombo);
            Gtk.Box.BoxChild w10 = ((Gtk.Box.BoxChild)(this.hbox1[this.bmCombo]));
            w10.Position = 1;
            w10.Expand = false;
            w10.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.addBmrkButton = new Gtk.Button();
            this.addBmrkButton.Sensitive = false;
            this.addBmrkButton.CanFocus = true;
            this.addBmrkButton.Name = "addBmrkButton";
            // Container child addBmrkButton.Gtk.Container+ContainerChild
            this.image20 = new Gtk.Image();
            this.image20.Sensitive = false;
            this.image20.Name = "image20";
            this.image20.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-add", Gtk.IconSize.Menu, 16);
            this.addBmrkButton.Add(this.image20);
            this.addBmrkButton.Label = null;
            this.hbox1.Add(this.addBmrkButton);
            Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(this.hbox1[this.addBmrkButton]));
            w12.Position = 2;
            w12.Expand = false;
            w12.Fill = false;
            this.vbox2.Add(this.hbox1);
            Gtk.Box.BoxChild w13 = ((Gtk.Box.BoxChild)(this.vbox2[this.hbox1]));
            w13.Position = 4;
            w13.Expand = false;
            w13.Fill = false;
            this.GtkAlignment2.Add(this.vbox2);
            this.frame1.Add(this.GtkAlignment2);
            this.GtkLabel7 = new Gtk.Label();
            this.GtkLabel7.Name = "GtkLabel7";
            this.GtkLabel7.LabelProp = Mono.Unix.Catalog.GetString("<b>Options</b>");
            this.GtkLabel7.UseMarkup = true;
            this.frame1.LabelWidget = this.GtkLabel7;
            w1.Add(this.frame1);
            Gtk.Box.BoxChild w16 = ((Gtk.Box.BoxChild)(w1[this.frame1]));
            w16.Position = 1;
            w16.Expand = false;
            w16.Fill = false;
            // Internal child ocmgtk.ImportDirectoryDialog.ActionArea
            Gtk.HButtonBox w17 = this.ActionArea;
            w17.Name = "dialog1_ActionArea";
            w17.Spacing = 10;
            w17.BorderWidth = ((uint)(5));
            w17.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonCancel = new Gtk.Button();
            this.buttonCancel.CanDefault = true;
            this.buttonCancel.CanFocus = true;
            this.buttonCancel.Name = "buttonCancel";
            this.buttonCancel.UseStock = true;
            this.buttonCancel.UseUnderline = true;
            this.buttonCancel.Label = "gtk-cancel";
            this.AddActionWidget(this.buttonCancel, -6);
            Gtk.ButtonBox.ButtonBoxChild w18 = ((Gtk.ButtonBox.ButtonBoxChild)(w17[this.buttonCancel]));
            w18.Expand = false;
            w18.Fill = false;
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonOk = new Gtk.Button();
            this.buttonOk.CanDefault = true;
            this.buttonOk.CanFocus = true;
            this.buttonOk.Name = "buttonOk";
            this.buttonOk.UseStock = true;
            this.buttonOk.UseUnderline = true;
            this.buttonOk.Label = "gtk-ok";
            this.AddActionWidget(this.buttonOk, -5);
            Gtk.ButtonBox.ButtonBoxChild w19 = ((Gtk.ButtonBox.ButtonBoxChild)(w17[this.buttonOk]));
            w19.Position = 1;
            w19.Expand = false;
            w19.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 512;
            this.DefaultHeight = 281;
            this.Show();
            this.addToListCheck.Toggled += new System.EventHandler(this.OnBmrkToggle);
            this.addBmrkButton.Clicked += new System.EventHandler(this.OnAddClicked);
        }
    }
}
